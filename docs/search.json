[{"path":"https://iguanamarina.github.io/neuroSCC/articles/landing_vignette.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"landing_vignette","text":"vignette guides initial data preparation steps necessary use neuroSCC package analyzing neuroimaging data Simultaneous Confidence Corridors (SCC).","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/articles/landing_vignette.html","id":"loading-and-inspecting-neuroimaging-data","dir":"Articles","previous_headings":"","what":"1. Loading and Inspecting Neuroimaging Data","title":"landing_vignette","text":"’ll begin loading sample PET neuroimaging file included package inspecting structure.","code":"niftiFile <- system.file(\"extdata\", \"syntheticControl1.nii.gz\", package = \"neuroSCC\")  # Load and clean data using neuroCleaner petData <- neuroCleaner(niftiFile)  # Inspect the data head(petData) #>   z x y pet #> 1 1 1 1   0 #> 2 1 1 2   0 #> 3 1 1 3   0 #> 4 1 1 4   0 #> 5 1 1 5   0 #> 6 1 1 6   0 str(petData) #> 'data.frame':    902629 obs. of  4 variables: #>  $ z  : int  1 1 1 1 1 1 1 1 1 1 ... #>  $ x  : int  1 1 1 1 1 1 1 1 1 1 ... #>  $ y  : int  1 2 3 4 5 6 7 8 9 10 ... #>  $ pet: int  0 0 0 0 0 0 0 0 0 0 ..."},{"path":"https://iguanamarina.github.io/neuroSCC/articles/landing_vignette.html","id":"creating-a-database-from-multiple-pet-images","dir":"Articles","previous_headings":"","what":"2. Creating a Database from Multiple PET Images","title":"landing_vignette","text":"Now, let’s demonstrate create structured database using multiple PET files available package.","code":"# Create database for control subjects controlPattern <- \"^syntheticControl.*\\\\.nii.gz$\" databaseControls <- databaseCreator(pattern = controlPattern, control = TRUE, quiet = FALSE) #> Processing CN_number 1 - File 1 of 2 #> Processing CN_number 2 - File 2 of 2  # Inspect the created database head(databaseControls) #>   CN_number z x y pet #> 1         1 1 1 1   0 #> 2         1 1 1 2   0 #> 3         1 1 1 3   0 #> 4         1 1 1 4   0 #> 5         1 1 1 5   0 #> 6         1 1 1 6   0 table(databaseControls$CN_number) #>  #>      1      2  #> 902629 902629"},{"path":"https://iguanamarina.github.io/neuroSCC/articles/landing_vignette.html","id":"creating-the-data-matrix","dir":"Articles","previous_headings":"","what":"3. Creating the Data Matrix","title":"landing_vignette","text":"’ll transform PET database matrix format suitable SCC analysis.","code":"# Create matrix for Z-slice 35 matrixControls <- matrixCreator(databaseControls, paramZ = 35, quiet = FALSE) #> Processing Subject 1 #> Processing Subject 2  # Inspect matrix structure dim(matrixControls) #> [1]    2 9919 str(matrixControls) #>  num [1:2, 1:9919] 0 0 0 0 0 0 0 0 0 0 ..."},{"path":"https://iguanamarina.github.io/neuroSCC/articles/landing_vignette.html","id":"normalizing-the-data-matrix","dir":"Articles","previous_headings":"","what":"4. Normalizing the Data Matrix","title":"landing_vignette","text":"Normalization adjusts global intensity differences subjects.","code":"# Perform mean normalization normalizedMatrix <- meanNormalization(matrixControls, returnDetails = FALSE) #>  #>  Mean before normalization: 4.345851 #>  #>  Normalization completed."},{"path":"https://iguanamarina.github.io/neuroSCC/articles/landing_vignette.html","id":"extracting-contours-for-triangulation","dir":"Articles","previous_headings":"","what":"5. Extracting Contours for Triangulation","title":"landing_vignette","text":"Contours neuroimage used set boundaries SCC computations.","code":"# Extract contours from sample data contours <- neuroContour(niftiFile, paramZ = 35, levels = 0, plotResult = TRUE) # Check contours structure length(contours) #> [1] 1 str(contours[[1]]) #> 'data.frame':    600 obs. of  2 variables: #>  $ x: num  8 9 9 9 9 9 9 9 9 9 ... #>  $ y: num  44 43 43 42 42 41 41 40 40 39 ..."},{"path":"https://iguanamarina.github.io/neuroSCC/articles/landing_vignette.html","id":"conditional-triangulation-setup-optional","dir":"Articles","previous_headings":"","what":"6. Conditional Triangulation Setup (optional)","title":"landing_vignette","text":"triangulation step requires external Triangulation package, currently CRAN. Ensure package installed. , install using: Conditional example triangulation:","code":"remotes::install_github(\"Triangulation_package_link_here\") if (!requireNamespace(\"Triangulation\", quietly = TRUE)) {   message(\"Triangulation package is not installed. Install it from the provided link to continue.\") } else {   # Perform triangulation with the first contour   mesh <- mesh <- Triangulation::TriMesh(n = 15, contours[[1]])      # Inspect mesh   print(mesh[[\"V\"]][1:10, ])   print(mesh[[\"Tr\"]][1:10, ]) } #> Warning in tri.mesh(X, Y): success: collinearities reduced through jitter #> Warning in tri.mesh(X, Y): dataset started with 3 colinear points, jitter #> added! #>              X        Y #>  [1,] 13.06667 38.40000 #>  [2,] 13.06667 43.46667 #>  [3,] 13.06667 48.53333 #>  [4,] 13.06667 53.60000 #>  [5,] 13.06667 58.66667 #>  [6,] 13.06667 63.73333 #>  [7,] 18.13333 28.26667 #>  [8,] 18.13333 33.33333 #>  [9,] 18.13333 38.40000 #> [10,] 18.13333 43.46667 #>       node1 node2 node3 #>  [1,]     1   205   206 #>  [2,]     1   206   207 #>  [3,]     1   207   209 #>  [4,]     1   209   210 #>  [5,]     1   210   213 #>  [6,]     1   213   215 #>  [7,]     1   215     8 #>  [8,]     1     8     9 #>  [9,]     1     9    10 #> [10,]     1    10     2"},{"path":"https://iguanamarina.github.io/neuroSCC/articles/landing_vignette.html","id":"whats-next","dir":"Articles","previous_headings":"","what":"What’s Next?","title":"landing_vignette","text":"’re now ready perform Simultaneous Confidence Corridor analyses: Single-group SCC analysis (see one_group_scc vignette) Two-group comparison SCC (see two_group_comparison vignette) Single patient vs. group analysis (see one_vs_group vignette) Feel free explore vignettes continue analysis journey neuroSCC.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/articles/one_vs_group.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"one_vs_group","text":"vignette illustrates minimal example single patient vs. group (1 vs Group) SCC analysis neuroSCC package. Ensure executed steps “Getting Started” vignette, follow conditional steps create required data.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/articles/one_vs_group.html","id":"data-preparation-conditional","dir":"Articles","previous_headings":"","what":"Data Preparation (Conditional)","title":"one_vs_group","text":"haven’t executed previous vignette, let’s conditionally recreate necessary matrices.","code":"cat(\"Creating required matrices from sample data...\\n\") #> Creating required matrices from sample data...  databaseControls <- databaseCreator(pattern = \"^syntheticControl.*\\\\.nii\\\\.gz$\", control = TRUE, quiet = TRUE) databasePathological <- databaseCreator(pattern = \"^syntheticPathological1\\\\.nii\\\\.gz$\", control = FALSE, quiet = TRUE)  matrixControls <- matrixCreator(databaseControls, paramZ = 35, quiet = TRUE) matrixPathological <- matrixCreator(databasePathological, paramZ = 35, quiet = TRUE)  normalizedMatrix <- meanNormalization(matrixControls) #>  #>  Mean before normalization: 4.345851 #>  #>  Normalization completed. normalizedPathological <- meanNormalization(matrixPathological) #>  #>  Mean before normalization: 4.243371 #>  #>  Normalization completed.  niftiPath <- system.file(\"extdata\", \"syntheticControl1.nii.gz\", package = \"neuroSCC\") contours <- neuroContour(niftiPath, paramZ = 35, levels = c(0), plotResult = FALSE)  cat(\"Data prepared successfully.\\n\") #> Data prepared successfully."},{"path":"https://iguanamarina.github.io/neuroSCC/articles/one_vs_group.html","id":"single-patient-data-and-cloning","dir":"Articles","previous_headings":"","what":"Single Patient Data and Cloning","title":"one_vs_group","text":"Prepare data single patient generate synthetic Poisson clones enable SCC computation:","code":"# Select the single pathological patient SCC_AD <- normalizedPathological[1, , drop = FALSE] SCC_CN <- normalizedMatrix  # Toy parameters for Poisson clone generation (modifiable by user) numClones <- 2 factorLambda <- 0.1  # Generate synthetic clones SCC_AD_clones <- generatePoissonClones(SCC_AD, numClones, factorLambda)  # Combine the patient with generated clones SCC_AD_expanded <- rbind(SCC_AD, SCC_AD_clones) SCC_AD_expanded <- meanNormalization(SCC_AD_expanded) #>  #>  Mean before normalization: 1.067077 #>  #>  Normalization completed."},{"path":"https://iguanamarina.github.io/neuroSCC/articles/one_vs_group.html","id":"scc-estimation-conditional-execution","dir":"Articles","previous_headings":"","what":"SCC Estimation (Conditional Execution)","title":"one_vs_group","text":"SCC computation typically computationally intensive. , skip actual computation load precomputed result package (SCCcomp.RData):","code":"result_file <- \"SCCcomp.RData\" scccomp_path <- system.file(\"data\", result_file, package = \"neuroSCC\")  if (file.exists(scccomp_path)) {   cat(\"Precomputed SCC comparison found. Loading it...\\n\")   load(scccomp_path) } else {   cat(\"Precomputed SCC data not found. Skipping due to computational complexity.\\n\")      # Intensive SCC estimation (code provided for reference)   SCCcomp <- ImageSCC::scc.image(     Ya = SCC_AD_expanded,     Yb = SCC_CN,     Z = contours[[1]],     d.est = 5,     d.band = 2,     r = 1,     V.est.a = as.matrix(contours[[1]]),     Tr.est.a = as.matrix(contours[[1]]),     V.band.a = as.matrix(contours[[1]]),     Tr.band.a = as.matrix(contours[[1]]),     penalty = TRUE,     lambda = 10^{seq(-6, 3, 0.5)},     alpha.grid = c(0.10, 0.05, 0.01),     adjust.sigma = TRUE   )      save(SCCcomp, file = result_file) }"},{"path":"https://iguanamarina.github.io/neuroSCC/articles/one_vs_group.html","id":"extracting-significant-points-and-evaluating-metrics","dir":"Articles","previous_headings":"","what":"Extracting Significant Points and Evaluating Metrics","title":"one_vs_group","text":"SCC computation results (SCCcomp) available, can extract significant points compute relevant performance metrics:","code":"# Extract significant points significantPoints <- getPoints(SCCcomp)  # Load example true ROI data from the package roi_path <- system.file(\"extdata\", \"ROIsample_Region2_18.nii.gz\", package = \"neuroSCC\") trueROI <- processROIs(roi_path, region = \"Region2\", number = \"18\", save = FALSE) #> Loading NIfTI file...  # Get dimensions for total coordinates dimensions <- getDimensions(roi_path) totalCoords <- expand.grid(x = 1:dimensions$xDim, y = 1:dimensions$yDim)  # Calculate performance metrics metrics <- calculateMetrics(   detectedPoints = significantPoints$positivePoints,   truePoints = trueROI,   totalCoords = dimensions,   regionName = \"SinglePatient_vs_Group\" )  # Display metrics print(metrics) #>                   region sensitivity specificity      PPV      NPV #> 1 SinglePatient_vs_Group    85.12872    95.62596 97.22839 78.10603"},{"path":"https://iguanamarina.github.io/neuroSCC/articles/one_vs_group.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"one_vs_group","text":"vignette provides reproducible example conducting single patient vs group SCC analysis using neuroSCC. Due computational constraints, actual SCC computations skipped precomputed data loaded instead. Users encouraged adapt parameters explore datasets.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/articles/two_group_comparison.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"two_group_comparison","text":"vignette demonstrates minimal example performing group vs. group SCC analysis using neuroSCC package. recommended first complete “Getting Started” vignette. haven’t, following section guide necessary data preparation.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/articles/two_group_comparison.html","id":"data-preparation-conditional","dir":"Articles","previous_headings":"","what":"Data Preparation (Conditional)","title":"two_group_comparison","text":"First, let’s conditionally prepare required data (control pathological matrices). use sample data included package.","code":"# Recreate necessary data from sample files cat(\"Creating sample data for 2-group comparison...\\n\") #> Creating sample data for 2-group comparison...  # Create databases for Control and Pathological groups databaseControls <- databaseCreator(pattern = \"^syntheticControl[12]\\\\.nii\\\\.gz$\", control = TRUE, quiet = TRUE) databasePathological <- databaseCreator(pattern = \"^syntheticPathological[12]\\\\.nii\\\\.gz$\", control = FALSE, quiet = TRUE)  # Create matrices suitable for SCC matrixControls <- matrixCreator(databaseControls, paramZ = 35, quiet = TRUE) matrixPathological <- matrixCreator(databasePathological, paramZ = 35, quiet = TRUE)  # Normalize matrices normalizedControls <- meanNormalization(matrixControls) #>  #>  Mean before normalization: 4.345851 #>  #>  Normalization completed. normalizedPathological <- meanNormalization(matrixPathological) #>  #>  Mean before normalization: 4.240851 #>  #>  Normalization completed.  # Extract contours from a control subject for SCC triangulation niftiPath <- system.file(\"extdata\", \"syntheticControl1.nii.gz\", package = \"neuroSCC\") contours <- neuroContour(niftiPath, paramZ = 35, levels = c(0), plotResult = FALSE)  cat(\"Data preparation completed successfully.\\n\") #> Data preparation completed successfully."},{"path":"https://iguanamarina.github.io/neuroSCC/articles/two_group_comparison.html","id":"scc-estimation-group-vs-group","dir":"Articles","previous_headings":"","what":"SCC Estimation (Group vs Group)","title":"two_group_comparison","text":"SCC estimation step computationally intensive thus typically skipped vignette demonstrations. , conditionally load precomputed SCC result provided package.","code":"result_file <- \"SCCcomp.RData\" scccomp_path <- system.file(\"data\", result_file, package = \"neuroSCC\")  if (file.exists(scccomp_path)) {   cat(\"Precomputed SCC group comparison found. Loading data...\\n\")   load(scccomp_path) } else {   cat(\"Precomputed SCC data not found. Actual computation is skipped due to computational complexity.\\n\")    # The following code shows how to perform the SCC computation (skipped by default)   SCCcomp <- ImageSCC::scc.image(     Ya = normalizedPathological,     Yb = normalizedControls,     Z = contours[[1]],     d.est = 5,     d.band = 2,     r = 1,     V.est.a = as.matrix(contours[[1]]),     Tr.est.a = as.matrix(contours[[1]]),     V.band.a = as.matrix(contours[[1]]),     Tr.band.a = as.matrix(contours[[1]]),     penalty = TRUE,     lambda = 10^{seq(-6, 3, 0.5)},     alpha.grid = c(0.10, 0.05, 0.01),     adjust.sigma = TRUE   )    save(SCCcomp, file = result_file) }"},{"path":"https://iguanamarina.github.io/neuroSCC/articles/two_group_comparison.html","id":"extracting-significant-points-and-evaluating-metrics","dir":"Articles","previous_headings":"","what":"Extracting Significant Points and Evaluating Metrics","title":"two_group_comparison","text":"SCC results (SCCcomp) loaded, extract significant regions evaluate performance known ground truth ROIs.","code":"# Extract significant points from SCC results significantPoints <- getPoints(SCCcomp)  # Load true ROI data provided within the package roi_path <- system.file(\"extdata\", \"ROIsample_Region2_18.nii.gz\", package = \"neuroSCC\") trueROI <- processROIs(roi_path, region = \"Region2\", number = \"18\", save = FALSE) #> Loading NIfTI file...  # Get total coordinate dimensions dimensions <- getDimensions(roi_path) totalCoords <- expand.grid(x = 1:dimensions$xDim, y = 1:dimensions$yDim)  # Calculate metrics to evaluate detection performance metrics <- calculateMetrics(   detectedPoints = significantPoints$positivePoints,   truePoints = trueROI,   totalCoords = dimensions,   regionName = \"Group_vs_Group\" )  # Display calculated metrics print(metrics) #>           region sensitivity specificity      PPV      NPV #> 1 Group_vs_Group    85.12872    95.62596 97.22839 78.10603"},{"path":"https://iguanamarina.github.io/neuroSCC/articles/two_group_comparison.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"two_group_comparison","text":"vignette, ’ve seen concise example conducting group vs group SCC analysis using neuroSCC package. ’ve used sample data provided package illustrate workflow clearly, focusing practical application evaluation results. Actual SCC computations computationally intensive thus skipped vignette. Instead, ’ve loaded precomputed results. can adapt template datasets, adjusting parameters experimenting according specific research needs.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Juan . Arias Lopez. Author, maintainer. Virgilio Gomez Rubio. Reviewer. Pablo Aguiar Fernandez. Thesis advisor, copyright holder. Andrew Haddon Kemp. Thesis advisor.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Arias Lopez J (2025). neuroSCC: Bridging Simultaneous Confidence Corridors Applications Performance Evaluation PET Neuroimaging. R package version 0.16.0, https://github.com/iguanamarina/PhD-2023-SCC-vs-SPM-Group-vs-Group, https://github.com/iguanamarina/PhD-2024-SCC-vs-SPM-SinglePatient-vs-Group, https://iguanamarina.github.io/neuroSCC/.","code":"@Manual{,   title = {neuroSCC: Bridging Simultaneous Confidence Corridors with Applications and Performance Evaluation in PET Neuroimaging},   author = {Juan A. {Arias Lopez}},   year = {2025},   note = {R package version 0.16.0, https://github.com/iguanamarina/PhD-2023-SCC-vs-SPM-Group-vs-Group, https://github.com/iguanamarina/PhD-2024-SCC-vs-SPM-SinglePatient-vs-Group},   url = {https://iguanamarina.github.io/neuroSCC/}, }"},{"path":"https://iguanamarina.github.io/neuroSCC/index.html","id":null,"dir":"","previous_headings":"","what":"neuroSCC","title":"neuroSCC","text":"🚀 neuroSCC facilitates structured processing PET neuroimaging data estimation Simultaneous Confidence Corridors (SCCs). integrates neuroimaging statistical methodologies : 📥 Load preprocess PET neuroimaging files. 🔬 Transform data Functional Data Analysis (FDA) setup. 🎯 Extract meaningful contours identify significant SCC regions. 📊 Compare SCC-based analyses gold-standard methods like SPM. package bridges established neuroimaging tools (oro.nifti) advanced statistical methods (ImageSCC), supporting one-group, two-group, single-patient vs. group comparisons. 📌 Developed part Ph.D. thesis: “Development statistical methods neuroimage data analysis towards early diagnosis neurodegenerative diseases”, Juan . Arias University Santiago de Compostela (Spain).","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/index.html","id":"id_-table-of-contents","dir":"","previous_headings":"","what":"📖 Table of Contents","title":"neuroSCC","text":"Project Installation Functions Overview Vignette Visual Workflow References Contributing & Feedback","code":""},{"path":[]},{"path":"https://iguanamarina.github.io/neuroSCC/index.html","id":"why-use-neuroscc","dir":"","previous_headings":"","what":"Why Use neuroSCC?","title":"neuroSCC","text":"PET neuroimaging data complex, requiring careful processing statistical validation. neuroSCC designed : ✔ Automate Preprocessing: Load, clean, structure PET data 📂 ✔ Standardize Analysis: Convert images FDA-compatible formats 🔬 ✔ Evaluate SCC Estimations: Identify significant regions confidence 🎯 ✔ Enable Method Comparisons: SCC vs SPM performance evaluation 📊 particularly suited : - Clinical neuroimaging research (Alzheimer’s disease, neurodegeneration). - Statistical validation imaging methods. - Comparisons SCC statistical approaches.","code":""},{"path":[]},{"path":"https://iguanamarina.github.io/neuroSCC/index.html","id":"id_-stable-github-release-future","dir":"","previous_headings":"","what":"🔹 Stable GitHub Release (Future)","title":"neuroSCC","text":"","code":"# Install the latest stable release (Future) remotes::install_github(\"iguanamarina/neuroSCC@94f4f65\") library(neuroSCC)"},{"path":"https://iguanamarina.github.io/neuroSCC/index.html","id":"id_-development-version-latest-features","dir":"","previous_headings":"","what":"📦 Development Version (Latest Features)","title":"neuroSCC","text":"","code":"# Install the latest development version remotes::install_github(\"iguanamarina/neuroSCC\") library(neuroSCC)"},{"path":"https://iguanamarina.github.io/neuroSCC/index.html","id":"id_-from-cran-future","dir":"","previous_headings":"","what":"🔜 From CRAN (Future)","title":"neuroSCC","text":"","code":"# Once available on CRAN install.packages(\"neuroSCC\") library(neuroSCC)"},{"path":[]},{"path":"https://iguanamarina.github.io/neuroSCC/index.html","id":"id_-neurocleaner-load--clean-pet-data","dir":"","previous_headings":"","what":"🧼 neuroCleaner(): Load & Clean PET Data","title":"neuroSCC","text":"neuroCleaner() reads NIFTI neuroimaging files, extracts voxel-wise data, structures tidy data frame. first preprocessing step, ensuring PET images cleaned formatted analysis. also integrates demographic data available.","code":"# Load a sample NIFTI file included in the package niftiFile <- system.file(\"extdata\", \"syntheticControl1.nii.gz\", package = \"neuroSCC\")  # Structure the data clean_data <- neuroCleaner(niftiFile) head(clean_data)"},{"path":"https://iguanamarina.github.io/neuroSCC/index.html","id":"id_-databasecreator-convert-multiple-files-into-a-database","dir":"","previous_headings":"","what":"📊 databaseCreator(): Convert Multiple Files into a Database","title":"neuroSCC","text":"databaseCreator() scans directory PET image files, processes neuroCleaner(), compiles structured data frame. function critical batch analysis, preparing data group-level SCC comparisons.","code":"# Get the file path for sample data dataDir <- system.file(\"extdata\", package = \"neuroSCC\")  # Example 1: Create database for Controls controlPattern <- \"^syntheticControl.*\\\\.nii.gz$\" databaseControls <- databaseCreator(pattern = controlPattern, control = TRUE, quiet = TRUE) head(databaseControls); tail(databaseControls) nrow(databaseControls)  # Total number of rows unique(databaseControls$CN_number)  # Show unique subjects  # Example 2: Create database for Pathological group pathologicalPattern <- \"^syntheticPathological.*\\\\.nii.gz$\" databasePathological <- databaseCreator(pattern = pathologicalPattern, control = FALSE, quiet = TRUE) head(databasePathological); tail(databasePathological) nrow(databasePathological)  # Total number of rows unique(databasePathological$AD_number)  # Show unique subjects"},{"path":"https://iguanamarina.github.io/neuroSCC/index.html","id":"id_-getdimensions-extract-image-dimensions","dir":"","previous_headings":"","what":"📐 getDimensions(): Extract Image Dimensions","title":"neuroSCC","text":"getDimensions() extracts spatial dimensions neuroimaging file, returning number voxels x, y, z axes. ensures proper alignment neuroimaging data processing.","code":"# Extract spatial dimensions of a PET scan niftiFile <- system.file(\"extdata\", \"syntheticControl1.nii.gz\", package = \"neuroSCC\") dims <- getDimensions(niftiFile) print(dims)"},{"path":"https://iguanamarina.github.io/neuroSCC/index.html","id":"id_-matrixcreator-convert-pet-data-into-a-functional-matrix","dir":"","previous_headings":"","what":"📊 matrixCreator(): Convert PET Data into a Functional Matrix","title":"neuroSCC","text":"matrixCreator() transforms PET imaging data matrix format functional data analysis. row represents subject’s PET data, formatted align FDA methodologies.","code":"# Generate a database using databaseCreator dataDir <- system.file(\"extdata\", package = \"neuroSCC\") controlPattern <- \"^syntheticControl.*\\\\.nii.gz$\" databaseControls <- databaseCreator(pattern = controlPattern, control = TRUE, quiet = FALSE)  # Convert the database into a matrix format matrixControls <- matrixCreator(databaseControls, paramZ = 35, quiet = FALSE) dim(matrixControls)  # Show matrix dimensions"},{"path":"https://iguanamarina.github.io/neuroSCC/index.html","id":"id_-meannormalization-normalize-data","dir":"","previous_headings":"","what":"📉 meanNormalization(): Normalize Data","title":"neuroSCC","text":"meanNormalization() performs row-wise mean normalization, adjusting intensity values across subjects. removes global intensity differences, making datasets comparable Functional Data Analysis (FDA).","code":"# Generate a database and create a matrix dataDir <- system.file(\"extdata\", package = \"neuroSCC\") controlPattern <- \"^syntheticControl.*\\\\.nii.gz$\" databaseControls <- databaseCreator(pattern = controlPattern, control = TRUE, quiet = TRUE) matrixControls <- matrixCreator(databaseControls, paramZ = 35, quiet = TRUE)  # Normalize the matrix with detailed output normalizationResult <- meanNormalization(matrixControls, returnDetails = TRUE, quiet = FALSE)  # Show problematic rows if any if (length(normalizationResult$problemRows) == 0) {   cat(\"No problematic rows detected.\\n\") } else {   print(normalizationResult$problemRows) }"},{"path":"https://iguanamarina.github.io/neuroSCC/index.html","id":"id_-neurocontour-extract-contours","dir":"","previous_headings":"","what":"📈 neuroContour(): Extract Contours","title":"neuroSCC","text":"neuroContour() extracts region boundaries (contours) neuroimaging data. particularly useful defining masks Regions Interest (ROIs) SCC computation.","code":"# Get the file path for a sample NIfTI file niftiFile <- system.file(\"extdata\", \"syntheticControl1.nii.gz\", package = \"neuroSCC\")  # Extract contours at level 0 contours <- neuroContour(niftiFile, paramZ = 35, levels = 0, plotResult = TRUE)  # Display the extracted contour coordinates if (length(contours) > 0) {   head(contours[[1]])  # Show first few points of the main contour }"},{"path":"https://iguanamarina.github.io/neuroSCC/index.html","id":"id_-getpoints-identify-significant-scc-differences","dir":"","previous_headings":"","what":"🔺 getPoints(): Identify Significant SCC Differences","title":"neuroSCC","text":"getPoints() identifies regions significant differences SCC computation. ImageSCC::scc.image() computes SCCs, getPoints() extracts coordinates group differences exceed confidence boundaries.","code":"# Load precomputed SCC example data(\"SCCcomp\", package = \"neuroSCC\")  # Extract significant SCC points significantPoints <- getPoints(SCCcomp)  # Show first extracted points (interpretation depends on SCC computation, see description) head(significantPoints$positivePoints)  # Regions where Pathological is hypoactive vs. Control head(significantPoints$negativePoints)  # Regions where Pathological is hyperactive vs. Control"},{"path":"https://iguanamarina.github.io/neuroSCC/index.html","id":"id_-getspmbinary-extract-spm-detected-significant-points","dir":"","previous_headings":"","what":"🧩 getSPMbinary(): Extract SPM-Detected Significant Points","title":"neuroSCC","text":"getSPMbinary() extracts significant points SPM-generated binary NIfTI file. returns voxel coordinates SPM detected significant differences, making comparable SCC results.","code":"# Load a sample binary NIfTI file (SPM result) niftiFile <- system.file(\"extdata\", \"binary.nii\", package = \"neuroSCC\") detectedSPM <- getSPMbinary(niftiFile, paramZ = 35)  # Show detected points head(detectedSPM)"},{"path":"https://iguanamarina.github.io/neuroSCC/index.html","id":"id_️-processrois-process-roi-data","dir":"","previous_headings":"","what":"🏷️ processROIs(): Process ROI Data","title":"neuroSCC","text":"processROIs() processes Regions Interest (ROIs) neuroimaging files. extracts voxel coordinates predefined hypoactive regions, structuring SCC analysis.","code":"# Process an ROI NIfTI file (show results in console) roiFile <- system.file(\"extdata\", \"ROIsample_Region2_18.nii\", package = \"neuroSCC\") processedROI <- processROIs(roiFile, region = \"Region2\", number = \"18\", save = FALSE) head(processedROI)  # Display first few rows"},{"path":"https://iguanamarina.github.io/neuroSCC/index.html","id":"id_-generatepoissonclones-generate-synthetic-pet-data","dir":"","previous_headings":"","what":"👥 generatePoissonClones(): Generate Synthetic PET Data","title":"neuroSCC","text":"generatePoissonClones() creates synthetic clones PET neuroimaging data adding Poisson-distributed noise. function essential 1 vs. Group SCC analyses, single subject’s data needs expanded allow valid statistical inference.","code":"# Get a single patient's PET data matrix dataDir <- system.file(\"extdata\", package = \"neuroSCC\") pathologicalPattern <- \"^syntheticPathological.*\\\\.nii.gz$\" databasePathological <- databaseCreator(pattern = pathologicalPattern, control = FALSE, quiet = TRUE) matrixPathological <- matrixCreator(databasePathological, paramZ = 35, quiet = TRUE) patientMatrix <- matrixPathological[1, , drop = FALSE]  # Select a single patient  # Select 10 random columns for visualization set.seed(123) sampledCols <- sample(ncol(patientMatrix), 10)  # Show voxel intensity values before cloning patientMatrix[, sampledCols]  # Generate 5 synthetic clones with Poisson noise clones <- generatePoissonClones(patientMatrix, numClones = 5, lambdaFactor = 0.25)  # Show voxel intensity values after cloning clones[, sampledCols]"},{"path":"https://iguanamarina.github.io/neuroSCC/index.html","id":"id_-calculatemetrics-evaluate-scc-performance","dir":"","previous_headings":"","what":"📊 calculateMetrics(): Evaluate SCC Performance","title":"neuroSCC","text":"calculateMetrics() assesses accuracy SCC-detected significant points comparing known true ROI regions. computes Sensitivity, Specificity, PPV, NPV, allowing quantitative evaluation SCC performance.","code":"# Extract detected SCC points detectedSCC <- getPoints(SCCcomp)$positivePoints  # Extract detected SPM points spmFile <- system.file(\"extdata\", \"binary.nii\", package = \"neuroSCC\") detectedSPM <- getSPMbinary(spmFile, paramZ = 35)  # Extract true ROI points roiFile <- system.file(\"extdata\", \"ROIsample_Region2_18.nii\", package = \"neuroSCC\") trueROI <- processROIs(roiFile, region = \"Region2\", number = \"18\", save = FALSE)  # Generate totalCoords from getDimensions() totalCoords <- getDimensions(roiFile)  # Compute SCC detection performance metricsSCC <- calculateMetrics(detectedSCC, trueROI, totalCoords, \"Region2_SCC\")  # Compute SPM detection performance metricsSPM <- calculateMetrics(detectedSPM, trueROI, totalCoords, \"Region2_SPM\")  # Print both results print(metricsSCC) print(metricsSPM)"},{"path":"https://iguanamarina.github.io/neuroSCC/index.html","id":"id_4️⃣-vignette-","dir":"","previous_headings":"","what":"4️⃣ Vignette","title":"neuroSCC","text":"full walkthrough using neuroSCC start finish available vignettes: 📌 Landing VignetteCovers data loading, matrix creation, triangulations. 📌 Two-group SCC Estimation & ComparisonComputes SCCs differences two groups identifies voxels outside estimated confidence intervals. 📌 1vsGroup SCC Estimation & ComparisonCompares individual patient control group using SCCs identifies voxels outside estimated confidence intervals.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/index.html","id":"id_5️⃣-visual-workflow-","dir":"","previous_headings":"","what":"5️⃣ Visual Workflow","title":"neuroSCC","text":"complete visual overview neuroSCC functions interact data, objects return, , can found Visual Workflow:","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/index.html","id":"id_6️⃣-references-","dir":"","previous_headings":"","what":"6️⃣ References","title":"neuroSCC","text":"Wang, Y., Wang, G., Wang, L., Ogden, R.T. (2020). Simultaneous Confidence Corridors Mean Functions Functional Data Analysis Imaging Data. Biometrics, 76(2), 427-437. Arias-López, J. ., Cadarso-Suárez, C., & Aguiar-Fernández, P. (2021). Computational Issues Application Functional Data Analysis Imaging Data. International Conference Computational Science Applications (pp. 630–638). Springer International Publishing Cham. Arias-López, J. ., Cadarso-Suárez, C., & Aguiar-Fernández, P. (2022). Functional Data Analysis Imaging Mean Function Estimation: Computing Times Parameter Selection. Computers, 11(6), 91. MDPI. Ph.D. Thesis: Development Statistical Methods Neuroimage Data Analysis Towards Early Diagnosis Neurodegenerative Diseases (development).","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/index.html","id":"id_-contributing--feedback-","dir":"","previous_headings":"","what":"📢 Contributing & Feedback","title":"neuroSCC","text":"welcome contributions, feedback, issue reports community! like help improve neuroSCC, ’s can get involved:","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/index.html","id":"id_-found-a-bug-report-an-issue","dir":"","previous_headings":"","what":"🐛 Found a Bug? Report an Issue","title":"neuroSCC","text":"encounter bug, incorrect result, unexpected behavior, please: Check existing issues see already reported. clear description problem. Steps reproduce issue. error messages screenshots (applicable).","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/index.html","id":"id_-have-an-idea-suggest-a-feature","dir":"","previous_headings":"","what":"💡 Have an Idea? Suggest a Feature","title":"neuroSCC","text":"always looking improve neuroSCC. suggestion new feature enhancement, please: Browse open discussions see idea already suggested. detailed explanation idea. improve package. relevant references examples similar projects.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/index.html","id":"id_-want-to-contribute-code","dir":"","previous_headings":"","what":"🔧 Want to Contribute Code?","title":"neuroSCC","text":"love contributions! submit pull request (PR): Fork repository GitHub. Clone fork local machine: Create new branch feature fix: Make changes commit : Push changes fork: Submit pull request (PR) forked repository main neuroSCC repository. submitting, please: ✔ Ensure code follows package style guidelines. ✔ Add documentation new functions features. ✔ Run devtools::check() verify package tests pass.","code":"git clone https://github.com/YOUR_USERNAME/neuroSCC.git cd neuroSCC git checkout -b feature-new-functionality git add . git commit -m \"Added new functionality XYZ\" git push origin feature-new-functionality"},{"path":"https://iguanamarina.github.io/neuroSCC/index.html","id":"id_-contact--support","dir":"","previous_headings":"","what":"📧 Contact & Support","title":"neuroSCC","text":"questions related bugs feature requests, feel free : 📬 Email maintainer: juanantonio.arias.lopez@usc.es 💬 Join discussion GitHub Discussions","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Juan . Arias Lopez Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/calculateMetrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate SCC or SPM Detection Performance — calculateMetrics","title":"Evaluate SCC or SPM Detection Performance — calculateMetrics","text":"Computes Sensitivity, Specificity, Positive Predictive Value (PPV), Negative Predictive Value (NPV) detected points compared ground truth ROI points. function used evaluate SCC-based SPM-based detection accuracy neuroimaging analysis.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/calculateMetrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate SCC or SPM Detection Performance — calculateMetrics","text":"","code":"calculateMetrics(detectedPoints, truePoints, totalCoords, regionName)"},{"path":"https://iguanamarina.github.io/neuroSCC/reference/calculateMetrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate SCC or SPM Detection Performance — calculateMetrics","text":"detectedPoints data frame containing SCC- SPM-detected points (x, y). SCC-detected points come getPoints. SPM-detected points come getSPMbinary. truePoints data frame containing ground truth ROI points (x, y), obtained using processROIs. totalCoords data frame containing possible voxel coordinates (x, y), obtained using getDimensions. regionName character string used labeling results.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/calculateMetrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate SCC or SPM Detection Performance — calculateMetrics","text":"data frame following evaluation metrics: region: analyzed region. sensitivity: True positive rate (TP / (TP + FN) * 100). specificity: True negative rate (TN / (TN + FP) * 100). PPV: Positive Predictive Value (TP / (TP + FP) * 100). NPV: Negative Predictive Value (TN / (TN + FN) * 100).","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/calculateMetrics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Evaluate SCC or SPM Detection Performance — calculateMetrics","text":"user must precompute following objects calling function: detectedPoints: Extracted using getPoints (SCC) getSPMbinary (SPM). truePoints: Extracted using processROIs, representing ground truth ROIs. totalCoords: Generated using getDimensions, providing full voxel grid.","code":""},{"path":[]},{"path":"https://iguanamarina.github.io/neuroSCC/reference/calculateMetrics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate SCC or SPM Detection Performance — calculateMetrics","text":"","code":"# Extract detected SCC points detectedSCC <- getPoints(SCCcomp)$positivePoints  # Extract detected SPM points spmFile <- system.file(\"extdata\", \"binary.nii.gz\", package = \"neuroSCC\") detectedSPM <- getSPMbinary(spmFile, paramZ = 35)  # Extract true ROI points roiFile <- system.file(\"extdata\", \"ROIsample_Region2_18.nii.gz\", package = \"neuroSCC\") trueROI <- processROIs(roiFile, region = \"Region2\", number = \"18\", save = FALSE) #> Loading NIfTI file...  # Generate totalCoords from getDimensions() totalCoords <- getDimensions(roiFile)  # Compute SCC detection performance metricsSCC <- calculateMetrics(detectedSCC, trueROI, totalCoords, \"Region2_SCC\")  # Compute SPM detection performance metricsSPM <- calculateMetrics(detectedSPM, trueROI, totalCoords, \"Region2_SPM\")  # Print both results print(metricsSCC) #>        region sensitivity specificity      PPV      NPV #> 1 Region2_SCC    85.12872    95.62596 97.22839 78.10603 print(metricsSPM) #>        region sensitivity specificity      PPV      NPV #> 1 Region2_SPM    75.14124    96.31291 96.33654 75.01638"},{"path":"https://iguanamarina.github.io/neuroSCC/reference/databaseCreator.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a database of processed PET image data — databaseCreator","title":"Create a database of processed PET image data — databaseCreator","text":"function processes PET images based specified file name pattern. reads file matching pattern, processes using neuroCleaner, compiles results structured data frame. function key step neuroSCC workflow, bridging individual image processing preparation functional data analysis Simultaneous Confidence Corridors (SCCs).","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/databaseCreator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a database of processed PET image data — databaseCreator","text":"","code":"databaseCreator(   pattern,   control = TRUE,   useSequentialNumbering = FALSE,   demo = NULL,   quiet = FALSE )"},{"path":"https://iguanamarina.github.io/neuroSCC/reference/databaseCreator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a database of processed PET image data — databaseCreator","text":"pattern character, regular expression pattern specifying files process. function extracts subject number directly filename based pattern. control logical, TRUE, function processes control group images; FALSE, processes pathological group images. Default TRUE. useSequentialNumbering logical, TRUE, assigns sequential numbers (1,2,3,...) files instead extracting filenames. Default FALSE. demo data.frame, optional demographic data. provided, information included output database file. Default NULL. quiet logical, TRUE, suppresses progress messages. Default FALSE.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/databaseCreator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a database of processed PET image data — databaseCreator","text":"data.frame aggregates processed data matched images.         row represents data one voxel (3D pixel), including: control group (control=TRUE): CN_number, z, x, y, pet pathological group (control=FALSE): AD_number, z, x, y, pet demographic data provided: Additional columns like PPT, Group, Sex, Age CN_number AD_number column contains subject identifier extracted         filename assigned sequentially. pet column contains intensity values.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/databaseCreator.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a database of processed PET image data — databaseCreator","text":"function performs following operations: Identifies files working directory match specified pattern. file: Extracts subject number filename (assigns sequential number useSequentialNumbering=TRUE). Processes file using neuroCleaner, integrating demographic data provided. Adds subject identifier information row. Merges processed data structured database. function typically followed matrixCreator analysis pipeline, transforms database format suitable SCC computation.","code":""},{"path":[]},{"path":"https://iguanamarina.github.io/neuroSCC/reference/databaseCreator.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a database of processed PET image data — databaseCreator","text":"","code":"# Get the file path for sample data dataDir <- system.file(\"extdata\", package = \"neuroSCC\")  # Example 1: Create database for Controls controlPattern <- \"^syntheticControl.*\\\\.nii.gz$\" databaseControls <- databaseCreator(pattern = controlPattern, control = TRUE, quiet = TRUE) head(databaseControls); tail(databaseControls) #>   CN_number z x y pet #> 1         1 1 1 1   0 #> 2         1 1 1 2   0 #> 3         1 1 1 3   0 #> 4         1 1 1 4   0 #> 5         1 1 1 5   0 #> 6         1 1 1 6   0 #>         CN_number  z  x   y pet #> 1805253         2 91 91 104   0 #> 1805254         2 91 91 105   0 #> 1805255         2 91 91 106   0 #> 1805256         2 91 91 107   0 #> 1805257         2 91 91 108   0 #> 1805258         2 91 91 109   0 nrow(databaseControls)  # Total number of rows #> [1] 1805258 unique(databaseControls$CN_number)  # Show unique subjects #> [1] \"1\" \"2\"  # Example 2: Create database for Pathological group pathologicalPattern <- \"^syntheticPathological.*\\\\.nii.gz$\" databasePathological <- databaseCreator(pattern = pathologicalPattern,                                         control = FALSE,                                         quiet = TRUE) head(databasePathological); tail(databasePathological) #>   AD_number z x y pet #> 1         1 1 1 1   0 #> 2         1 1 1 2   0 #> 3         1 1 1 3   0 #> 4         1 1 1 4   0 #> 5         1 1 1 5   0 #> 6         1 1 1 6   0 #>         AD_number  z  x   y pet #> 1805253         2 91 91 104   0 #> 1805254         2 91 91 105   0 #> 1805255         2 91 91 106   0 #> 1805256         2 91 91 107   0 #> 1805257         2 91 91 108   0 #> 1805258         2 91 91 109   0 nrow(databasePathological)  # Total number of rows #> [1] 1805258 unique(databasePathological$AD_number)  # Show unique subjects #> [1] \"1\" \"2\""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/generatePoissonClones.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Synthetic Poisson Clones for PET Data — generatePoissonClones","title":"Generate Synthetic Poisson Clones for PET Data — generatePoissonClones","text":"function generates synthetic clones PET data matrix adding Poisson-distributed noise non-zero voxel. necessary circumvent limitations functional data analysis (FDA) **single patient vs. group (1 vs. Group) setups**, single subject provide enough variability estimate Simultaneous Confidence Corridors (SCCs) reliably.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/generatePoissonClones.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Synthetic Poisson Clones for PET Data — generatePoissonClones","text":"","code":"generatePoissonClones(originalMatrix, numClones, lambdaFactor)"},{"path":"https://iguanamarina.github.io/neuroSCC/reference/generatePoissonClones.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Synthetic Poisson Clones for PET Data — generatePoissonClones","text":"originalMatrix numeric matrix row represents flattened PET image. numClones integer specifying number synthetic clones generate. lambdaFactor positive numeric value controlling magnitude Poisson noise.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/generatePoissonClones.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Synthetic Poisson Clones for PET Data — generatePoissonClones","text":"numeric matrix `numClones` rows, containing modified version `originalMatrix`         added Poisson noise.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/generatePoissonClones.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Synthetic Poisson Clones for PET Data — generatePoissonClones","text":"- Values `0` remain unchanged preserve background regions. - `NA` values replaced `0` adding noise. - Poisson noise applied positive values, scaled `lambdaFactor`. - approach allows **SCC methods operate 1 vs. Group analyses**, ensuring statistical   validity single observation sufficient.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/generatePoissonClones.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Synthetic Poisson Clones for PET Data — generatePoissonClones","text":"","code":"# Get a single patient's PET data matrix dataDir <- system.file(\"extdata\", package = \"neuroSCC\") pathologicalPattern <- \"^syntheticPathological.*\\\\.nii.gz$\" databasePathological <- databaseCreator(pattern = pathologicalPattern,                                         control = FALSE,                                         quiet = TRUE) matrixPathological <- matrixCreator(databasePathological, paramZ = 35, quiet = TRUE) patientMatrix <- matrixPathological[1, , drop = FALSE]  # Select a single patient  # Select 10 random columns for visualization set.seed(123) sampledCols <- sample(ncol(patientMatrix), 10)  # Show voxel intensity values before cloning patientMatrix[, sampledCols] #>  [1] 8 0 0 5 0 0 0 7 9 0  # Generate 5 synthetic clones with Poisson noise clones <- generatePoissonClones(patientMatrix, numClones = 5, lambdaFactor = 0.25)  # Show voxel intensity values after cloning clones[, sampledCols] #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #> [1,]   12    0    0    5    0    0    0    7   10     0 #> [2,]    8    0    0    6    0    0    0   11   12     0 #> [3,]    8    0    0    6    0    0    0    9   12     0 #> [4,]   14    0    0    5    0    0    0    8   13     0 #> [5,]    9    0    0    7    0    0    0    8   10     0"},{"path":"https://iguanamarina.github.io/neuroSCC/reference/getDimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Dimensions from a Neuroimaging File — getDimensions","title":"Get Dimensions from a Neuroimaging File — getDimensions","text":"Extracts dimensional information NIFTI similar neuroimaging files. function designed work together neuroCleaner() can also used independently informative purposes.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/getDimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Dimensions from a Neuroimaging File — getDimensions","text":"","code":"getDimensions(file)"},{"path":"https://iguanamarina.github.io/neuroSCC/reference/getDimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Dimensions from a Neuroimaging File — getDimensions","text":"file NIFTI file object filename extract dimensions .","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/getDimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Dimensions from a Neuroimaging File — getDimensions","text":"list containing: xDim: Number voxels X dimension yDim: Number voxels Y dimension zDim: Number slices Z dimension dim: Total number voxels (xDim * yDim)","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/getDimensions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Dimensions from a Neuroimaging File — getDimensions","text":"function can handle NIFTI file paths pre-loaded oro.nifti file objects. provides consistent way extract dimensional information across package.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/getDimensions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Dimensions from a Neuroimaging File — getDimensions","text":"","code":"# Get the file path for a sample NIfTI file niftiFile <- system.file(\"extdata\", \"syntheticControl1.nii.gz\", package = \"neuroSCC\")  # Extract dimensions from the NIfTI file dimensions <- getDimensions(niftiFile)  # Display the extracted dimensions print(dimensions) #> $xDim #> [1] 91 #>  #> $yDim #> [1] 109 #>  #> $zDim #> [1] 91 #>  #> $dim #> [1] 9919 #>"},{"path":"https://iguanamarina.github.io/neuroSCC/reference/getPoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract significant SCC points from an SCC comparison object — getPoints","title":"Extract significant SCC points from an SCC comparison object — getPoints","text":"function identifies extracts coordinates significant differences fall outside simultaneous confidence corridors (SCCs). processes results ImageSCC::scc.image(), returning extracted coordinates differences statistically significant. interpretation results depends SCC computed. SCC computed scc.image(Ya = Y_AD, Yb = Y_CN, ...), meaning Control group (CN) second argument, function extracts: positivePoints: Regions Control - Pathological significantly SCC.     represent areas Pathological group (AD) hypoactive compared Control group. negativePoints: Regions Control - Pathological significantly SCC.     represent areas Pathological group (AD) hyperactive compared Control group. Make sure check order Ya Yb SCC computation interpreting results.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/getPoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract significant SCC points from an SCC comparison object — getPoints","text":"","code":"getPoints(sccResult)"},{"path":"https://iguanamarina.github.io/neuroSCC/reference/getPoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract significant SCC points from an SCC comparison object — getPoints","text":"sccResult list containing SCC computation results scc.image.        list include least: Z.band: Matrix specifying grid positions. ind.inside.cover: Indices grid points inside confidence band. scc: 3D array containing computed SCC values.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/getPoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract significant SCC points from an SCC comparison object — getPoints","text":"named list: positivePoints: Data frame coordinates first group (Ya) significantly lower activity second (Yb). negativePoints: Data frame coordinates first group (Ya) significantly higher activity second (Yb).","code":""},{"path":[]},{"path":"https://iguanamarina.github.io/neuroSCC/reference/getPoints.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract significant SCC points from an SCC comparison object — getPoints","text":"","code":"# Load precomputed SCC example data(\"SCCcomp\", package = \"neuroSCC\")  # Extract significant SCC points significantPoints <- getPoints(SCCcomp)  # Show first extracted points (interpretation depends on SCC computation, see description) head(significantPoints$positivePoints)  # Regions where Pathological is hypoactive vs. Control #>    x  y #> 1 11 52 #> 2 11 53 #> 3 11 54 #> 4 11 55 #> 5 11 56 #> 6 12 50 head(significantPoints$negativePoints)  # Regions where Pathological is hyperactive vs. Control #>    x  y #> 1  9 44 #> 2  9 45 #> 3  9 46 #> 4  9 47 #> 5 10 38 #> 6 10 39"},{"path":"https://iguanamarina.github.io/neuroSCC/reference/getSPMbinary.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract SPM-detected significant points from a binary NIfTI file — getSPMbinary","title":"Extract SPM-detected significant points from a binary NIfTI file — getSPMbinary","text":"function extracts voxel coordinates pet = 1 (significant points) binary NIfTI file generated external SPM analysis. filters data retain points given brain slice (z = paramZ). result data frame detected points, structured identically output getPoints. allows direct comparison SCC- SPM-detected regions calculateMetrics.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/getSPMbinary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract SPM-detected significant points from a binary NIfTI file — getSPMbinary","text":"","code":"getSPMbinary(niftiFile, paramZ = 35)"},{"path":"https://iguanamarina.github.io/neuroSCC/reference/getSPMbinary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract SPM-detected significant points from a binary NIfTI file — getSPMbinary","text":"niftiFile character, path binary NIfTI file. paramZ integer, specific z-slice extract. Default 35.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/getSPMbinary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract SPM-detected significant points from a binary NIfTI file — getSPMbinary","text":"data frame containing: x, y: Coordinates detected points.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/getSPMbinary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract SPM-detected significant points from a binary NIfTI file — getSPMbinary","text":"- function processes externally generated SPM results compatible format SCC analysis. - getDimensions can used verify full coordinate grid.","code":""},{"path":[]},{"path":"https://iguanamarina.github.io/neuroSCC/reference/getSPMbinary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract SPM-detected significant points from a binary NIfTI file — getSPMbinary","text":"","code":"# Load a sample binary NIfTI file (SPM result) niftiFile <- system.file(\"extdata\", \"binary.nii.gz\", package = \"neuroSCC\") detectedSPM <- getSPMbinary(niftiFile, paramZ = 35)  # Show detected points head(detectedSPM) #>         x  y #> 338496 12 51 #> 338497 12 52 #> 338498 12 53 #> 338499 12 54 #> 338500 12 55 #> 338501 12 56"},{"path":"https://iguanamarina.github.io/neuroSCC/reference/matrixCreator.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert database from PET image data to a functional data matrix format — matrixCreator","title":"Convert database from PET image data to a functional data matrix format — matrixCreator","text":"function transforms database created databaseCreator matrix format suitable functional data analysis. row matrix represents subject's PET data, formatted continuous line data points.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/matrixCreator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert database from PET image data to a functional data matrix format — matrixCreator","text":"","code":"matrixCreator(   database,   paramZ = 35,   useSequentialNumbering = FALSE,   quiet = FALSE )"},{"path":"https://iguanamarina.github.io/neuroSCC/reference/matrixCreator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert database from PET image data to a functional data matrix format — matrixCreator","text":"database data frame created databaseCreator containing PET image data columns subject number, z, x, y, pet values. paramZ specific z-coordinate slice analyze. Default 35. useSequentialNumbering TRUE, assigns sequential numbers instead extracting filenames. quiet TRUE, suppresses progress messages.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/matrixCreator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert database from PET image data to a functional data matrix format — matrixCreator","text":"matrix row represents PET data one subject,         formatted continuous line data points.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/matrixCreator.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert database from PET image data to a functional data matrix format — matrixCreator","text":"function performs several operations: Verifies specified z-slice exists database. Automatically calculates matrix dimensions based x y coordinates. Extracts PET intensity values subject specified z-slice. Handles control pathological groups recognizing subject identifiers. Replaces NaN values zero ensure matrix compatibility. Typically follows databaseCreator precedes meanNormalization neuroSCC pipeline.","code":""},{"path":[]},{"path":"https://iguanamarina.github.io/neuroSCC/reference/matrixCreator.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert database from PET image data to a functional data matrix format — matrixCreator","text":"","code":"# Generate a database using databaseCreator dataDir <- system.file(\"extdata\", package = \"neuroSCC\") controlPattern <- \"^syntheticControl.*\\\\.nii.gz$\" databaseControls <- databaseCreator(pattern = controlPattern, control = TRUE, quiet = FALSE) #> Processing CN_number 1 - File 1 of 2 #> Processing CN_number 2 - File 2 of 2  # Convert the database into a matrix format matrixControls <- matrixCreator(databaseControls, paramZ = 35, quiet = FALSE) #> Processing Subject 1 #> Processing Subject 2 dim(matrixControls)  # Show matrix dimensions #> [1]    2 9919"},{"path":"https://iguanamarina.github.io/neuroSCC/reference/meanNormalization.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean Average Normalization for Matrix Data — meanNormalization","title":"Mean Average Normalization for Matrix Data — meanNormalization","text":"function normalizes row given matrix mean value. divides element row mean row, ignoring NA values. normalization critical pre-processing step comparing data multiple sources account global intensity differences.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/meanNormalization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean Average Normalization for Matrix Data — meanNormalization","text":"","code":"meanNormalization(   matrixData,   handleInvalidRows = c(\"warn\", \"error\", \"omit\"),   returnDetails = FALSE,   quiet = FALSE )"},{"path":"https://iguanamarina.github.io/neuroSCC/reference/meanNormalization.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mean Average Normalization for Matrix Data — meanNormalization","text":"matrixData matrix, matrix row represents data needs normalized, typically output matrixCreator. handleInvalidRows character, specifies handle rows invalid means (zero NA). Options : \"warn\" (default) warns leaves row unnormalized, \"error\" stops error, \"omit\" removes problematic rows result. returnDetails logical, TRUE, returns list containing normalized matrix additional diagnostic information. FALSE (default), returns normalized matrix. quiet logical, TRUE, suppresses console messages. Default FALSE.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/meanNormalization.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mean Average Normalization for Matrix Data — meanNormalization","text":"matrix row normalized mean value.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/meanNormalization.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mean Average Normalization for Matrix Data — meanNormalization","text":"function iterates row input matrix, calculates mean row, divides element row calculated mean. process adjusts global intensity differences rows matrix.","code":""},{"path":[]},{"path":"https://iguanamarina.github.io/neuroSCC/reference/meanNormalization.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mean Average Normalization for Matrix Data — meanNormalization","text":"","code":"# Generate a database and create a matrix dataDir <- system.file(\"extdata\", package = \"neuroSCC\") controlPattern <- \"^syntheticControl.*\\\\.nii.gz$\" databaseControls <- databaseCreator(pattern = controlPattern, control = TRUE, quiet = TRUE) matrixControls <- matrixCreator(databaseControls, paramZ = 35, quiet = TRUE)  # Normalize the matrix with detailed output normalizationResult <- meanNormalization(matrixControls, returnDetails = TRUE, quiet = FALSE) #>  #>  Mean before normalization: 4.345851 #>  #>  Normalization completed. # Show problematic rows if any if (length(normalizationResult$problemRows) == 0) {   cat(\"No problematic rows detected.\\n\") } else {   print(normalizationResult$problemRows) } #> No problematic rows detected."},{"path":"https://iguanamarina.github.io/neuroSCC/reference/neuroCleaner.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean and load data from NIFTI neuroimaging files — neuroCleaner","title":"Clean and load data from NIFTI neuroimaging files — neuroCleaner","text":"Loads NIFTI-format neuroimaging file, converts structured data frame, organizes data analysis. function serves first step neuroimaging data processing pipeline, transforming raw PET data format suitable functional data analysis. neuroSCC package prepares organizes neuroimaging data, actual Simultaneous Confidence Corridors (SCCs) computed using functions ImageSCC package ImageSCC::scc1g.image ImageSCC::scc2g.image.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/neuroCleaner.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean and load data from NIFTI neuroimaging files — neuroCleaner","text":"","code":"neuroCleaner(name, demo = NULL, demoRow = 1)"},{"path":"https://iguanamarina.github.io/neuroSCC/reference/neuroCleaner.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean and load data from NIFTI neuroimaging files — neuroCleaner","text":"name character string specifying path NIFTI file. demo optional data frame containing demographic information participants. provided, contain columns match (case-insensitive): 'PPT', 'Group', 'Sex', 'Age'. 'PPT' column can contain participant IDs match name parameter automatic matching, match found, row specified demoRow used. Default NULL. demoRow integer specifying row demographic data use automatic matching fails multiple matches possible. Default 1.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/neuroCleaner.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean and load data from NIFTI neuroimaging files — neuroCleaner","text":"data frame following columns: demographic data provided: PPT, Group, Sex, Age, z, x, y, pet demographic data: z, x, y, pet row represents voxel (3D pixel) image, pet containing   intensity value location.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/neuroCleaner.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Clean and load data from NIFTI neuroimaging files — neuroCleaner","text":"function performs several key operations: Reads NIFTI file using oro.nifti package functions. Converts 3D image data structured data frame. Extracts dimensional information (z, x, y coordinates). Organizes PET intensity values. demographic data provided, merges image data. resulting data frame serves input subsequent analysis functions neuroSCC pipeline, databaseCreator matrixCreator, prepare data eventual analysis ImageSCC package functions.","code":""},{"path":[]},{"path":"https://iguanamarina.github.io/neuroSCC/reference/neuroCleaner.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean and load data from NIFTI neuroimaging files — neuroCleaner","text":"","code":"# Get the file path for sample Control NIfTI file niftiFile <- system.file(\"extdata\", \"syntheticControl1.nii.gz\", package = \"neuroSCC\")  # Example 1: Without demographic data petData <- neuroCleaner(niftiFile) petData[sample(nrow(petData), 10), ] # Show 10 random voxels #>         z  x   y pet #> 733492 74 87  31   0 #> 509788 52 36 104   0 #> 476381 49  3  51   0 #> 873783 89  9  39   0 #> 292075 30 41  64   6 #> 710662 72 59  91   0 #> 652240 66 69  93   0 #> 416645 43  1  47   0 #> 372737 38 53  66   7 #> 728070 74 37  59   8  # Example 2: With demographic data demoFile <- system.file(\"extdata\", \"Demographics.csv\", package = \"neuroSCC\") demoData <- read.csv(demoFile, stringsAsFactors = FALSE, sep = \";\") petDataWithDemo <- neuroCleaner(niftiFile, demo = demoData) petDataWithDemo[sample(nrow(petDataWithDemo), 10), ] # Show 10 random voxels #>                      PPT Group Sex Age  z  x   y pet #> 790615 syntheticControl1    CN   M  73 80 65  38   0 #> 178862 syntheticControl1    CN   M  73 19  3 102   0 #> 787474 syntheticControl1    CN   M  73 80 36  58   3 #> 377992 syntheticControl1    CN   M  73 39 10  89   0 #> 827832 syntheticControl1    CN   M  73 84 42  86   0 #> 883405 syntheticControl1    CN   M  73 90  6  69   0 #> 824259 syntheticControl1    CN   M  73 84 10   1   0 #> 341496 syntheticControl1    CN   M  73 35 39 108   0 #> 207252 syntheticControl1    CN   M  73 21 82  43   0 #> 490932 syntheticControl1    CN   M  73 50 45 105   0"},{"path":"https://iguanamarina.github.io/neuroSCC/reference/neuroContour.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain and save neuroimaging contours from a NIFTI file — neuroContour","title":"Obtain and save neuroimaging contours from a NIFTI file — neuroContour","text":"function extracts contours neuroimaging NIFTI file values change according specified levels. processes NIFTI file neuroCleaner extract structured neuroimaging data, extracts contours using contoureR::getContourLines. contours serve input Triangulation::TriMesh, used Simultaneous Confidence Corridors (SCCs) calculations. **mandatory**, **highly recommended** input NIFTI file pre-processed zero values represent background non-zero values represent regions interest. function's default behavior extracts contours level 0, ideal well-masked data.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/neuroContour.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain and save neuroimaging contours from a NIFTI file — neuroContour","text":"","code":"neuroContour(niftiFile, paramZ = 35, levels = c(0), plotResult = FALSE)"},{"path":"https://iguanamarina.github.io/neuroSCC/reference/neuroContour.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain and save neuroimaging contours from a NIFTI file — neuroContour","text":"niftiFile character, path NIFTI file containing neuroimaging data. Ideally, file masked zero values represent background. paramZ integer, specific z-slice extract contours . Default 35. levels numeric, vector levels draw contours. Default c(0). plotResult logical, TRUE, plots extracted contours. Default FALSE.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/neuroContour.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain and save neuroimaging contours from a NIFTI file — neuroContour","text":"list data frames, data frame contains x y coordinates contour. first element typically represents external boundary, subsequent elements (present) represent internal contours holes. data frame two columns: x: x-coordinates contour points y: y-coordinates contour points","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/neuroContour.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Obtain and save neuroimaging contours from a NIFTI file — neuroContour","text":"function extracts contours **NIFTI** file, typically **masked** image background values set zero, regions interest contain non-zero values. users can specify different boundary level, recommended approach use levels = 0 masked data. extracted contours typically used input Triangulation::TriMesh create triangular mesh region, used Simultaneous Confidence Corridors calculations.","code":""},{"path":[]},{"path":"https://iguanamarina.github.io/neuroSCC/reference/neuroContour.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain and save neuroimaging contours from a NIFTI file — neuroContour","text":"","code":"# Get the file path for a sample NIfTI file niftiFile <- system.file(\"extdata\", \"syntheticControl1.nii.gz\", package = \"neuroSCC\")  # Extract contours at level 0 contours <- neuroContour(niftiFile, paramZ = 35, levels = 0, plotResult = TRUE)   # Display the extracted contour coordinates if (length(contours) > 0) {   head(contours[[1]])  # Show first few points of the main contour } #>   x  y #> 1 8 44 #> 2 9 43 #> 3 9 43 #> 4 9 42 #> 5 9 42 #> 6 9 41"},{"path":"https://iguanamarina.github.io/neuroSCC/reference/neuroSCC-package.html","id":null,"dir":"Reference","previous_headings":"","what":"neuroSCC: Bridging Simultaneous Confidence Corridors with Applications and Performance Evaluation in PET Neuroimaging — neuroSCC-package","title":"neuroSCC: Bridging Simultaneous Confidence Corridors with Applications and Performance Evaluation in PET Neuroimaging — neuroSCC-package","text":"Provides functions structured processing PET neuroimaging data preparation estimation Simultaneous Confidence Corridors (SCCs) one-group, two-group, single patient vs group comparisons. package facilitates PET image loading, data restructuring, integration Functional Data Analysis framework, contour extraction, post-SCC identification significant results, performance evaluation. bridges established neuroimaging packages (e.g., 'oro.nifti') novel statistical methodologies (.e., 'ImageSCC') facilitates reproducible analysis pipelines, enabling performance comparison SCC-based analyses gold-standard methods Statistical Parametric Mapping (SPM).","code":""},{"path":[]},{"path":"https://iguanamarina.github.io/neuroSCC/reference/neuroSCC-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"neuroSCC: Bridging Simultaneous Confidence Corridors with Applications and Performance Evaluation in PET Neuroimaging — neuroSCC-package","text":"Maintainer: Juan . Arias Lopez juanantonio.arias.lopez@usc.es contributors: Virgilio Gomez Rubio Virgilio.Gomez@uclm.es [reviewer] Pablo Aguiar Fernandez pablo.aguiar@usc.es [thesis advisor, copyright holder] Andrew Haddon Kemp .H.Kemp@swansea.ac.uk [thesis advisor]","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/processROIs.html","id":null,"dir":"Reference","previous_headings":"","what":"Process ROIs from a NIfTI file — processROIs","title":"Process ROIs from a NIfTI file — processROIs","text":"function processes Regions Interest (ROIs) binary NIfTI file. extracts voxel coordinates image preserves original structure, marking voxels part ROI. function typically used SCC evaluation, detected SCC regions compared predefined ROIs calculateMetrics.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/processROIs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process ROIs from a NIfTI file — processROIs","text":"","code":"processROIs(   roiFile,   region,   number,   save = TRUE,   outputDir = \"results/ROIs\",   verbose = TRUE )"},{"path":"https://iguanamarina.github.io/neuroSCC/reference/processROIs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process ROIs from a NIfTI file — processROIs","text":"roiFile character, path NIfTI file containing ROI data. region character, name ROI region (e.g., \"roi4\"). number character, subject group identifier (e.g., \"18\"). save logical, TRUE, saves processed ROIs `.RDS` files. FALSE, prints preview console. Default TRUE. outputDir character, directory processed ROI tables saved. verbose logical, TRUE, prints progress messages. Default TRUE.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/processROIs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process ROIs from a NIfTI file — processROIs","text":"data frame containing voxel-level ROI information, columns: group: ROI identifier, composed region + number. z, x, y: Voxel coordinates. pet: Binary indicator (1 ROI, 0 non-ROI).","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/processROIs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Process ROIs from a NIfTI file — processROIs","text":"function reads provided NIfTI file extracts voxel data. keeps voxels, indicating whether belongs ROI (pet = 1) (pet = 0).","code":""},{"path":[]},{"path":"https://iguanamarina.github.io/neuroSCC/reference/processROIs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process ROIs from a NIfTI file — processROIs","text":"","code":"# Process an ROI NIfTI file (show results in console) roiFile <- system.file(\"extdata\", \"ROIsample_Region2_18.nii.gz\", package = \"neuroSCC\") processedROI <- processROIs(roiFile, region = \"Region2\", number = \"18\", save = FALSE) #> Loading NIfTI file... head(processedROI)  # Display first few rows #>              group z x y pet #> 1 Region2_number18 1 1 1   0 #> 2 Region2_number18 1 1 2   0 #> 3 Region2_number18 1 1 3   0 #> 4 Region2_number18 1 1 4   0 #> 5 Region2_number18 1 1 5   0 #> 6 Region2_number18 1 1 6   0"},{"path":"https://iguanamarina.github.io/neuroSCC/reference/SCCcomp.html","id":null,"dir":"Reference","previous_headings":"","what":"Example SCC Computation Result — SCCcomp","title":"Example SCC Computation Result — SCCcomp","text":"precomputed example Simultaneous Confidence Corridor (SCC) analysis comparing group Pathological subjects Controls, using scc.image function. dataset serves compact realistic representation kind SCC object generated neuroimaging comparisons, used internally getPoints calculateMetrics examples.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/SCCcomp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example SCC Computation Result — SCCcomp","text":"","code":"data(\"SCCcomp\")"},{"path":"https://iguanamarina.github.io/neuroSCC/reference/SCCcomp.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example SCC Computation Result — SCCcomp","text":"list class \"image\" containing: scc 3D array SCC confidence bands, shape [n, 2, alfa] Z.band Matrix grid coordinates corresponding evaluation points ind.inside.cover Integer vector indices identifying SCC band region V.est., V.est.b Vertex matrices domain triangulation (control pathological) Tr.est., Tr.est.b Triangle index matrices domain triangulation alpha Vector confidence levels used (e.g. 0.1, 0.05, 0.01) d.est Spline degree used mean estimation r Smoothing parameter","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/SCCcomp.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example SCC Computation Result — SCCcomp","text":"Simulated PET neuroimaging analysis SCC evaluation.","code":""},{"path":[]},{"path":"https://iguanamarina.github.io/neuroSCC/news/index.html","id":"neuroscc-0160-24-03-25","dir":"Changelog","previous_headings":"","what":"neuroSCC 0.16.0 (24-03-25)","title":"neuroSCC 0.16.0 (24-03-25)","text":"Webpage Vignettes already working.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/news/index.html","id":"neuroscc-0150-21-03-25","dir":"Changelog","previous_headings":"","what":"neuroSCC 0.15.0 (21-03-25)","title":"neuroSCC 0.15.0 (21-03-25)","text":"First final version webpage deployed","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/news/index.html","id":"neuroscc-0140","dir":"Changelog","previous_headings":"","what":"neuroSCC 0.14.0","title":"neuroSCC 0.14.0","text":"generatePoissonClones() already working. calculateMetrics() already working. getSPMbinary() included SPM processing.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/news/index.html","id":"neuroscc-0130","dir":"Changelog","previous_headings":"","what":"neuroSCC 0.13.0","title":"neuroSCC 0.13.0","text":"First Complete Release basic functioning achieved.","code":""},{"path":[]},{"path":"https://iguanamarina.github.io/neuroSCC/news/index.html","id":"major-changes-0-12-0","dir":"Changelog","previous_headings":"","what":"Major Changes","title":"neuroSCC 0.12.0","text":"Included plotSCC() visualization. Included generatePoissonClones() 1vsGroup setups. Included calculateMetrics() performante estimation.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/news/index.html","id":"major-changes-0-12-0-1","dir":"Changelog","previous_headings":"","what":"Major Changes","title":"neuroSCC 0.12.0","text":"Introduced processROIs() function efficient Region Interest (ROI) processing. Updated getPoints() improve extraction significant points Simultaneous Confidence Corridors (SCCs). Comprehensive documentation added functions, aligning CRAN standards facilitate user understanding package integration.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/news/index.html","id":"minor-improvements-0-12-0","dir":"Changelog","previous_headings":"","what":"Minor Improvements","title":"neuroSCC 0.12.0","text":"Implemented robust error handling across multiple functions enhance package stability user experience.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/news/index.html","id":"neuroscc-010-0","dir":"Changelog","previous_headings":"","what":"neuroSCC 0.10-0","title":"neuroSCC 0.10-0","text":"Added databaseCreator(), enabling creation structured databases neuroimaging data.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/news/index.html","id":"neuroscc-09-0","dir":"Changelog","previous_headings":"","what":"neuroSCC 0.9-0","title":"neuroSCC 0.9-0","text":"Introduced matrixCreator(), facilitating conversion databases matrix formats suitable analysis.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/news/index.html","id":"neuroscc-08-0","dir":"Changelog","previous_headings":"","what":"neuroSCC 0.8-0","title":"neuroSCC 0.8-0","text":"Implemented meanNormalization(), allowing normalization data matrices mean values.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/news/index.html","id":"neuroscc-07-0","dir":"Changelog","previous_headings":"","what":"neuroSCC 0.7-0","title":"neuroSCC 0.7-0","text":"Integrated additional raw functions extracted directly MASTERSCRIPTS expand package capabilities.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/news/index.html","id":"neuroscc-06-0","dir":"Changelog","previous_headings":"","what":"neuroSCC 0.6-0","title":"neuroSCC 0.6-0","text":"Continued incorporation functions MASTERSCRIPTS, enhancing data processing workflows.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/news/index.html","id":"neuroscc-05-0","dir":"Changelog","previous_headings":"","what":"neuroSCC 0.5-0","title":"neuroSCC 0.5-0","text":"Included initial versions new functions broaden package’s analytical tools.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/news/index.html","id":"neuroscc-04-0","dir":"Changelog","previous_headings":"","what":"neuroSCC 0.4-0","title":"neuroSCC 0.4-0","text":"Applied minor tweaks adjustments existing functions improve performance reliability.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/news/index.html","id":"neuroscc-03-0","dir":"Changelog","previous_headings":"","what":"neuroSCC 0.3-0","title":"neuroSCC 0.3-0","text":"Conducted multiple tests validate function performance. Updated neuroCleaner() enhanced data cleaning processes.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/news/index.html","id":"neuroscc-02-0","dir":"Changelog","previous_headings":"","what":"neuroSCC 0.2-0","title":"neuroSCC 0.2-0","text":"Added README provide overview usage instructions. Introduced initial version neuroCleaner() preprocessing neuroimaging data. Attempted include sample data; however, due issues, subsequently removed.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/news/index.html","id":"neuroscc-01-0","dir":"Changelog","previous_headings":"","what":"neuroSCC 0.1-0","title":"neuroSCC 0.1-0","text":"Established foundational structure package, setting groundwork subsequent development.","code":""}]
