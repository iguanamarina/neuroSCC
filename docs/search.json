[{"path":"https://iguanamarina.github.io/neuroSCC/articles/landing_vignette.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"landing_vignette","text":"vignette guides initial data preparation steps necessary use neuroSCC package analyzing neuroimaging data Simultaneous Confidence Corridors (SCC).","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/articles/landing_vignette.html","id":"loading-and-inspecting-neuroimaging-data","dir":"Articles","previous_headings":"","what":"1. Loading and Inspecting Neuroimaging Data","title":"landing_vignette","text":"’ll begin loading sample PET neuroimaging file included package inspecting structure.","code":"niftiFile <- system.file(\"extdata\", \"syntheticControl1.nii.gz\", package = \"neuroSCC\")  # Load and clean data using neuroCleaner petData <- neuroCleaner(niftiFile)  # Inspect the data head(petData) #>   z x y pet #> 1 1 1 1   0 #> 2 1 1 2   0 #> 3 1 1 3   0 #> 4 1 1 4   0 #> 5 1 1 5   0 #> 6 1 1 6   0 str(petData) #> 'data.frame':    902629 obs. of  4 variables: #>  $ z  : int  1 1 1 1 1 1 1 1 1 1 ... #>  $ x  : int  1 1 1 1 1 1 1 1 1 1 ... #>  $ y  : int  1 2 3 4 5 6 7 8 9 10 ... #>  $ pet: int  0 0 0 0 0 0 0 0 0 0 ..."},{"path":"https://iguanamarina.github.io/neuroSCC/articles/landing_vignette.html","id":"creating-a-database-from-multiple-pet-images","dir":"Articles","previous_headings":"","what":"2. Creating a Database from Multiple PET Images","title":"landing_vignette","text":"Now, let’s demonstrate create structured database using multiple PET files available package.","code":"# Create database for control subjects controlPattern <- \"^syntheticControl.*\\\\.nii.gz$\" databaseControls <- databaseCreator(pattern = controlPattern, control = TRUE, quiet = FALSE) #> Processing CN_number 1 - File 1 of 2 #> Processing CN_number 2 - File 2 of 2  # Inspect the created database head(databaseControls) #>   CN_number z x y pet #> 1         1 1 1 1   0 #> 2         1 1 1 2   0 #> 3         1 1 1 3   0 #> 4         1 1 1 4   0 #> 5         1 1 1 5   0 #> 6         1 1 1 6   0 table(databaseControls$CN_number) #>  #>      1      2  #> 902629 902629"},{"path":"https://iguanamarina.github.io/neuroSCC/articles/landing_vignette.html","id":"creating-the-data-matrix","dir":"Articles","previous_headings":"","what":"3. Creating the Data Matrix","title":"landing_vignette","text":"’ll transform PET database matrix format suitable SCC analysis.","code":"# Create matrix for Z-slice 35 matrixControls <- matrixCreator(databaseControls, paramZ = 35, quiet = FALSE) #> Processing Subject 1 #> Processing Subject 2  # Inspect matrix structure dim(matrixControls) #> [1]    2 9919 str(matrixControls) #>  num [1:2, 1:9919] 0 0 0 0 0 0 0 0 0 0 ..."},{"path":"https://iguanamarina.github.io/neuroSCC/articles/landing_vignette.html","id":"normalizing-the-data-matrix","dir":"Articles","previous_headings":"","what":"4. Normalizing the Data Matrix","title":"landing_vignette","text":"Normalization adjusts global intensity differences subjects.","code":"# Perform mean normalization normalizedMatrix <- meanNormalization(matrixControls, returnDetails = FALSE) #>  #>  Mean before normalization: 4.345851 #>  #>  Normalization completed."},{"path":"https://iguanamarina.github.io/neuroSCC/articles/landing_vignette.html","id":"extracting-contours-for-triangulation","dir":"Articles","previous_headings":"","what":"5. Extracting Contours for Triangulation","title":"landing_vignette","text":"Contours neuroimage used set boundaries SCC computations.","code":"# Extract contours from sample data contours <- neuroContour(niftiFile, paramZ = 35, levels = 0, plotResult = TRUE) # Check contours structure length(contours) #> [1] 1 str(contours[[1]]) #> 'data.frame':    600 obs. of  2 variables: #>  $ x: num  8 9 9 9 9 9 9 9 9 9 ... #>  $ y: num  44 43 43 42 42 41 41 40 40 39 ..."},{"path":"https://iguanamarina.github.io/neuroSCC/articles/landing_vignette.html","id":"conditional-triangulation-setup-optional","dir":"Articles","previous_headings":"","what":"6. Conditional Triangulation Setup (optional)","title":"landing_vignette","text":"triangulation step requires external Triangulation package, currently CRAN. Ensure package installed. , install using: Conditional example triangulation:","code":"remotes::install_github(\"FIRST-Data-Lab/Triangulation\") if (!requireNamespace(\"Triangulation\", quietly = TRUE)) {   cat(\"Triangulation package is not installed.\\nInstall it using: remotes::install_github('FIRST-Data-Lab/Triangulation')\\n\") } else {   # Perform triangulation with the first contour   mesh <- Triangulation::TriMesh(n = 15, contours[[1]])      # Inspect mesh   print(mesh[[\"V\"]][1:10, ])   print(mesh[[\"Tr\"]][1:10, ]) } #> Warning in tri.mesh(X, Y): success: collinearities reduced through jitter #> Warning in tri.mesh(X, Y): dataset started with 3 colinear points, jitter #> added! #>              X        Y #>  [1,] 13.06667 38.40000 #>  [2,] 13.06667 43.46667 #>  [3,] 13.06667 48.53333 #>  [4,] 13.06667 53.60000 #>  [5,] 13.06667 58.66667 #>  [6,] 13.06667 63.73333 #>  [7,] 18.13333 28.26667 #>  [8,] 18.13333 33.33333 #>  [9,] 18.13333 38.40000 #> [10,] 18.13333 43.46667 #>       node1 node2 node3 #>  [1,]     1   205   206 #>  [2,]     1   206   207 #>  [3,]     1   207   209 #>  [4,]     1   209   210 #>  [5,]     1   210   213 #>  [6,]     1   213   215 #>  [7,]     1   215     8 #>  [8,]     1     8     9 #>  [9,]     1     9    10 #> [10,]     1    10     2"},{"path":"https://iguanamarina.github.io/neuroSCC/articles/landing_vignette.html","id":"whats-next","dir":"Articles","previous_headings":"","what":"What’s Next?","title":"landing_vignette","text":"’re now ready perform Simultaneous Confidence Corridor analyses: Single-group SCC analysis (see one_group_scc vignette) Two-group comparison SCC (see two_group_comparison vignette) Single patient vs. group analysis (see one_vs_group vignette) Feel free explore vignettes continue analysis journey neuroSCC.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/articles/one_vs_group.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"one_vs_group","text":"vignette illustrates minimal example single patient vs. group (1 vs Group) SCC analysis neuroSCC package. Ensure executed steps “Getting Started” vignette, follow conditional steps create required data.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/articles/one_vs_group.html","id":"data-preparation-conditional","dir":"Articles","previous_headings":"","what":"Data Preparation (Conditional)","title":"one_vs_group","text":"haven’t executed previous vignette, let’s conditionally recreate necessary matrices.","code":"cat(\"Creating required matrices from sample data...\\n\") #> Creating required matrices from sample data...  databaseControls <- databaseCreator(pattern = \"^syntheticControl.*\\\\.nii\\\\.gz$\", control = TRUE, quiet = TRUE) databasePathological <- databaseCreator(pattern = \"^syntheticPathological1\\\\.nii\\\\.gz$\", control = FALSE, quiet = TRUE)  matrixControls <- matrixCreator(databaseControls, paramZ = 35, quiet = TRUE) matrixPathological <- matrixCreator(databasePathological, paramZ = 35, quiet = TRUE)  normalizedMatrix <- meanNormalization(matrixControls) #>  #>  Mean before normalization: 4.345851 #>  #>  Normalization completed. normalizedPathological <- meanNormalization(matrixPathological) #>  #>  Mean before normalization: 4.243371 #>  #>  Normalization completed.  niftiPath <- system.file(\"extdata\", \"syntheticControl1.nii.gz\", package = \"neuroSCC\") contours <- neuroContour(niftiPath, paramZ = 35, levels = c(0), plotResult = FALSE)  cat(\"Data prepared successfully.\\n\") #> Data prepared successfully."},{"path":"https://iguanamarina.github.io/neuroSCC/articles/one_vs_group.html","id":"single-patient-data-and-cloning","dir":"Articles","previous_headings":"","what":"Single Patient Data and Cloning","title":"one_vs_group","text":"Prepare data single patient generate synthetic Poisson clones enable SCC computation:","code":"# Select the single pathological patient SCC_AD <- normalizedPathological[1, , drop = FALSE] SCC_CN <- normalizedMatrix  # Toy parameters for Poisson clone generation (modifiable by user) numClones <- 2 factorLambda <- 0.1  # Generate synthetic clones SCC_AD_clones <- generatePoissonClones(SCC_AD, numClones, factorLambda)  # Combine the patient with generated clones SCC_AD_expanded <- rbind(SCC_AD, SCC_AD_clones) SCC_AD_expanded <- meanNormalization(SCC_AD_expanded) #>  #>  Mean before normalization: 1.067077 #>  #>  Normalization completed."},{"path":"https://iguanamarina.github.io/neuroSCC/articles/one_vs_group.html","id":"scc-estimation-conditional-execution","dir":"Articles","previous_headings":"","what":"SCC Estimation (Conditional Execution)","title":"one_vs_group","text":"step requires external ImageSCC package, currently CRAN. Ensure package installed. , install using: SCC computation typically computationally intensive. , skip actual computation load precomputed result package (SCCcomp.RData):","code":"if (requireNamespace(\"ImageSCC\", quietly = TRUE)) {   message(\"'ImageSCC' package is available.\") } else {   message(\"This vignette requires the 'ImageSCC' package.\")   message(\"You can install it from GitHub with:\")   message(\"  remotes::install_github('FIRST-Data-Lab/ImageSCC')\") } #> 'ImageSCC' package is available. # Check for Triangulation package triangulation_available <- requireNamespace(\"Triangulation\", quietly = TRUE)  if (triangulation_available) {   message(\"'Triangulation' package is available.\") } else {   message(\"'Triangulation' package not available.\")   message(\"Install with: remotes::install_github('FIRST-Data-Lab/Triangulation')\") } #> 'Triangulation' package is available.  # Proceed only if both packages are available if (triangulation_available) {    # Try loading precomputed SCC object from data/   if (!exists(\"SCCcomp\", inherits = FALSE) &&       \"SCCcomp\" %in% data(package = \"neuroSCC\")$results[, \"Item\"]) {          message(\"Loading precomputed SCC object from package data...\")     suppressMessages(data(\"SCCcomp\", package = \"neuroSCC\"))    } else if (!exists(\"SCCcomp\", inherits = FALSE)) {          message(\"Precomputed object not found. Running SCC estimation...\")      # 1. Prepare contour and triangulation     Z <- as.matrix(contours[[1]][, c(\"x\", \"y\")])     VT <- Triangulation::TriMesh(contours[[1]], n = 15)     V <- as.matrix(VT[[1]])     Tr <- as.matrix(VT[[2]])      # 2. Run SCC estimation     SCCcomp <- ImageSCC::scc.image(       Ya = SCC_AD_expanded,       Yb = SCC_CN,       Z = Z,       d.est = 5,       d.band = 2,       r = 1,       V.est.a = V,       Tr.est.a = Tr,       V.band.a = V,       Tr.band.a = Tr,       penalty = TRUE,       lambda = 10^{seq(-6, 3, 0.5)},       alpha.grid = c(0.10, 0.05, 0.01),       adjust.sigma = TRUE     )   } } #> Loading precomputed SCC object from package data..."},{"path":"https://iguanamarina.github.io/neuroSCC/articles/one_vs_group.html","id":"extracting-significant-points-and-evaluating-metrics","dir":"Articles","previous_headings":"","what":"Extracting Significant Points and Evaluating Metrics","title":"one_vs_group","text":"SCC computation results (SCCcomp) available, can extract significant points compute relevant performance metrics:","code":"# Extract significant points significantPoints <- getPoints(SCCcomp)  # Load example true ROI data from the package roi_path <- system.file(\"extdata\", \"ROIsample_Region2_18.nii.gz\", package = \"neuroSCC\") trueROI <- processROIs(roi_path, region = \"Region2\", number = \"18\", save = FALSE) #> Loading NIfTI file...  # Get dimensions for total coordinates dimensions <- getDimensions(roi_path) totalCoords <- expand.grid(x = 1:dimensions$xDim, y = 1:dimensions$yDim)  # Calculate performance metrics metrics <- calculateMetrics(   detectedPoints = significantPoints$positivePoints,   truePoints = trueROI,   totalCoords = dimensions,   regionName = \"SinglePatient_vs_Group\" )  # Display metrics print(metrics) #>                   region sensitivity specificity      PPV      NPV #> 1 SinglePatient_vs_Group    85.12872    95.62596 97.22839 78.10603"},{"path":"https://iguanamarina.github.io/neuroSCC/articles/one_vs_group.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"one_vs_group","text":"vignette provides reproducible example conducting single patient vs group SCC analysis using neuroSCC. Due computational constraints, actual SCC computations skipped precomputed data loaded instead. Users encouraged adapt parameters explore datasets.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/articles/two_group_comparison.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"two_group_comparison","text":"vignette demonstrates minimal example performing group vs. group SCC analysis using neuroSCC package. recommended first complete “Getting Started” vignette. haven’t, following section guide necessary data preparation.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/articles/two_group_comparison.html","id":"data-preparation-conditional","dir":"Articles","previous_headings":"","what":"Data Preparation (Conditional)","title":"two_group_comparison","text":"First, let’s conditionally prepare required data (control pathological matrices). use sample data included package.","code":"# Recreate necessary data from sample files cat(\"Creating sample data for 2-group comparison...\\n\") #> Creating sample data for 2-group comparison...  # Create databases for Control and Pathological groups databaseControls <- databaseCreator(pattern = \"^syntheticControl[12]\\\\.nii\\\\.gz$\", control = TRUE, quiet = TRUE) databasePathological <- databaseCreator(pattern = \"^syntheticPathological[12]\\\\.nii\\\\.gz$\", control = FALSE, quiet = TRUE)  # Create matrices suitable for SCC matrixControls <- matrixCreator(databaseControls, paramZ = 35, quiet = TRUE) matrixPathological <- matrixCreator(databasePathological, paramZ = 35, quiet = TRUE)  # Normalize matrices normalizedControls <- meanNormalization(matrixControls) #>  #>  Mean before normalization: 4.345851 #>  #>  Normalization completed. normalizedPathological <- meanNormalization(matrixPathological) #>  #>  Mean before normalization: 4.240851 #>  #>  Normalization completed.  # Extract contours from a control subject for SCC triangulation niftiPath <- system.file(\"extdata\", \"syntheticControl1.nii.gz\", package = \"neuroSCC\") contours <- neuroContour(niftiPath, paramZ = 35, levels = c(0), plotResult = FALSE)  cat(\"Data preparation completed successfully.\\n\") #> Data preparation completed successfully."},{"path":"https://iguanamarina.github.io/neuroSCC/articles/two_group_comparison.html","id":"scc-estimation-group-vs-group","dir":"Articles","previous_headings":"","what":"SCC Estimation (Group vs Group)","title":"two_group_comparison","text":"step requires external ImageSCC package, currently CRAN. Ensure package installed. , install using: SCC estimation step computationally intensive thus typically skipped vignette demonstrations. , conditionally load precomputed SCC result provided package.","code":"if (requireNamespace(\"ImageSCC\", quietly = TRUE)) {   message(\"'ImageSCC' package is available.\") } else {   message(\"This vignette requires the 'ImageSCC' package.\")   message(\"You can install it from GitHub with:\")   message(\"  remotes::install_github('FIRST-Data-Lab/ImageSCC')\") } #> 'ImageSCC' package is available. # Check for Triangulation package triangulation_available <- requireNamespace(\"Triangulation\", quietly = TRUE)  if (triangulation_available) {   message(\"'Triangulation' package is available.\") } else {   message(\"'Triangulation' package not available.\")   message(\"Install with: remotes::install_github('FIRST-Data-Lab/Triangulation')\") } #> 'Triangulation' package is available.  # Proceed only if both packages are available if (triangulation_available) {    # Try loading precomputed SCC object from data/   if (!exists(\"SCCcomp\", inherits = FALSE) &&       \"SCCcomp\" %in% data(package = \"neuroSCC\")$results[, \"Item\"]) {          message(\"Loading precomputed SCC group comparison from package data...\")     suppressMessages(data(\"SCCcomp\", package = \"neuroSCC\"))    } else if (!exists(\"SCCcomp\", inherits = FALSE)) {      message(\"Precomputed data not found. Running SCC estimation...\")      # Perform SCC computation (only for development)     SCCcomp <- ImageSCC::scc.image(       Ya = normalizedPathological,       Yb = normalizedControls,       Z = contours[[1]],       d.est = 5,       d.band = 2,       r = 1,       V.est.a = as.matrix(contours[[1]]),       Tr.est.a = as.matrix(contours[[1]]),       V.band.a = as.matrix(contours[[1]]),       Tr.band.a = as.matrix(contours[[1]]),       penalty = TRUE,       lambda = 10^{seq(-6, 3, 0.5)},       alpha.grid = c(0.10, 0.05, 0.01),       adjust.sigma = TRUE     )   } } #> Loading precomputed SCC group comparison from package data..."},{"path":"https://iguanamarina.github.io/neuroSCC/articles/two_group_comparison.html","id":"extracting-significant-points-and-evaluating-metrics","dir":"Articles","previous_headings":"","what":"Extracting Significant Points and Evaluating Metrics","title":"two_group_comparison","text":"SCC results (SCCcomp) loaded, extract significant regions evaluate performance known ground truth ROIs.","code":"# Extract significant points from SCC results significantPoints <- getPoints(SCCcomp)  # Load true ROI data provided within the package roi_path <- system.file(\"extdata\", \"ROIsample_Region2_18.nii.gz\", package = \"neuroSCC\") trueROI <- processROIs(roi_path, region = \"Region2\", number = \"18\", save = FALSE) #> Loading NIfTI file...  # Get total coordinate dimensions dimensions <- getDimensions(roi_path) totalCoords <- expand.grid(x = 1:dimensions$xDim, y = 1:dimensions$yDim)  # Calculate metrics to evaluate detection performance metrics <- calculateMetrics(   detectedPoints = significantPoints$positivePoints,   truePoints = trueROI,   totalCoords = dimensions,   regionName = \"Group_vs_Group\" )  # Display calculated metrics print(metrics) #>           region sensitivity specificity      PPV      NPV #> 1 Group_vs_Group    85.12872    95.62596 97.22839 78.10603"},{"path":"https://iguanamarina.github.io/neuroSCC/articles/two_group_comparison.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"two_group_comparison","text":"vignette, ’ve seen concise example conducting group vs group SCC analysis using neuroSCC package. ’ve used sample data provided package illustrate workflow clearly, focusing practical application evaluation results. Actual SCC computations computationally intensive thus skipped vignette. Instead, ’ve loaded precomputed results. can adapt template datasets, adjusting parameters experimenting according specific research needs.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Juan . Arias Lopez. Author, maintainer, copyright holder. Virgilio Gomez Rubio. Reviewer. Pablo Aguiar Fernandez. Thesis advisor. Andrew Haddon Kemp. Thesis advisor.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Arias Lopez J (2025). neuroSCC: Bridging Simultaneous Confidence Corridors PET Neuroimaging. R package version 1.0.0, https://github.com/iguanamarina/PhD-2023-SCC-vs-SPM-Group-vs-Group, https://github.com/iguanamarina/PhD-2024-SCC-vs-SPM-SinglePatient-vs-Group, https://iguanamarina.github.io/neuroSCC/.","code":"@Manual{,   title = {neuroSCC: Bridging Simultaneous Confidence Corridors and PET Neuroimaging},   author = {Juan A. {Arias Lopez}},   year = {2025},   note = {R package version 1.0.0,     https://github.com/iguanamarina/PhD-2023-SCC-vs-SPM-Group-vs-Group,     https://github.com/iguanamarina/PhD-2024-SCC-vs-SPM-SinglePatient-vs-Group},   url = {https://iguanamarina.github.io/neuroSCC/}, }"},{"path":"https://iguanamarina.github.io/neuroSCC/index.html","id":null,"dir":"","previous_headings":"","what":"neuroSCC","title":"neuroSCC","text":"🚀 neuroSCC Bridging Simultaneous Confidence Corridors PET Neuroimaging. package facilitates structured processing PET neuroimaging data estimation Simultaneous Confidence Corridors (SCCs). integrates neuroimaging statistical methodologies : 📥 Load preprocess PET neuroimaging files. 🔬 Transform data Functional Data Analysis (FDA) setup. 🎯 Extract meaningful contours identify significant SCC regions. 📊 Compare SCC-based analyses gold-standard methods like SPM. package bridges established neuroimaging tools (oro.nifti) advanced statistical methods (ImageSCC), supporting one-group, two-group, single-patient vs. group comparisons. 📌 Developed part Ph.D. thesis: “Development statistical methods neuroimage data analysis towards early diagnosis neurodegenerative diseases”, Juan . Arias University Santiago de Compostela (Spain). 💡 work partially supported internship grant awarded 6th Conference Spanish National Biostatistics Network (BIOSTATNET) 2025, prize best poster presentation young researcher trajectory.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/index.html","id":"id_-table-of-contents","dir":"","previous_headings":"","what":"📖 Table of Contents","title":"neuroSCC","text":"Project Installation Functions Overview Vignette Visual Workflow References Contributing & Feedback","code":""},{"path":[]},{"path":"https://iguanamarina.github.io/neuroSCC/index.html","id":"why-use-neuroscc","dir":"","previous_headings":"","what":"Why Use neuroSCC?","title":"neuroSCC","text":"PET neuroimaging data complex, requiring careful processing statistical validation. neuroSCC designed : ✔ Automate Preprocessing: Load, clean, structure PET data 📂 ✔ Standardize Analysis: Convert images FDA-compatible formats 🔬 ✔ Evaluate SCC Estimations: Identify significant regions confidence 🎯 ✔ Enable Method Comparisons: SCC vs SPM performance evaluation 📊 particularly suited : - Clinical neuroimaging research (Alzheimer’s disease, neurodegeneration). - Statistical validation imaging methods. - Comparisons SCC statistical approaches.","code":""},{"path":[]},{"path":"https://iguanamarina.github.io/neuroSCC/index.html","id":"id_-stable-github-release-future","dir":"","previous_headings":"","what":"🔹 Stable GitHub Release (Future)","title":"neuroSCC","text":"","code":"# Install the latest stable release (Future) remotes::install_github(\"iguanamarina/neuroSCC@1a91f8e\") library(neuroSCC)"},{"path":"https://iguanamarina.github.io/neuroSCC/index.html","id":"id_-development-version-latest-features","dir":"","previous_headings":"","what":"📦 Development Version (Latest Features)","title":"neuroSCC","text":"","code":"# Install the latest development version remotes::install_github(\"iguanamarina/neuroSCC\") library(neuroSCC)"},{"path":"https://iguanamarina.github.io/neuroSCC/index.html","id":"id_-from-cran-future","dir":"","previous_headings":"","what":"🔜 From CRAN (Future)","title":"neuroSCC","text":"","code":"# Once available on CRAN install.packages(\"neuroSCC\") library(neuroSCC)"},{"path":[]},{"path":"https://iguanamarina.github.io/neuroSCC/index.html","id":"id_-neurocleaner-load--clean-pet-data","dir":"","previous_headings":"","what":"🧼 neuroCleaner(): Load & Clean PET Data","title":"neuroSCC","text":"neuroCleaner() reads NIFTI neuroimaging files, extracts voxel-wise data, structures tidy data frame. first preprocessing step, ensuring PET images cleaned formatted analysis. also integrates demographic data available.","code":"# Load a sample Control NIfTI file niftiFile <- system.file(\"extdata\", \"syntheticControl1.nii.gz\", package = \"neuroSCC\") # Example Without demographic data petData <- neuroCleaner(niftiFile) petData[sample(nrow(petData), 10), ]  # Show 10 random voxels"},{"path":"https://iguanamarina.github.io/neuroSCC/index.html","id":"id_-databasecreator-convert-multiple-files-into-a-database","dir":"","previous_headings":"","what":"📊 databaseCreator(): Convert Multiple Files into a Database","title":"neuroSCC","text":"databaseCreator() scans directory PET image files, processes neuroCleaner(), compiles structured data frame. function critical batch analysis, preparing data group-level SCC comparisons.","code":"#' @examples #' # NOTE: To keep runtime below CRAN limits, this example processes only 1 subject. #' # You can expand the pattern to include all subjects for real use. #' #' # Example: Create a database from a single synthetic PET image (control group) #' controlPattern <- \"^syntheticControl1\\\\.nii\\\\.gz$\" #' databaseControls <- databaseCreator(pattern = controlPattern, control = TRUE, quiet = TRUE) #' #' head(databaseControls)"},{"path":"https://iguanamarina.github.io/neuroSCC/index.html","id":"id_-getdimensions-extract-image-dimensions","dir":"","previous_headings":"","what":"📐 getDimensions(): Extract Image Dimensions","title":"neuroSCC","text":"getDimensions() extracts spatial dimensions neuroimaging file, returning number voxels x, y, z axes. ensures proper alignment neuroimaging data processing.","code":"# Extract spatial dimensions of a PET scan niftiFile <- system.file(\"extdata\", \"syntheticControl1.nii.gz\", package = \"neuroSCC\") dims <- getDimensions(niftiFile) print(dims)"},{"path":"https://iguanamarina.github.io/neuroSCC/index.html","id":"id_-matrixcreator-convert-pet-data-into-a-functional-matrix","dir":"","previous_headings":"","what":"📊 matrixCreator(): Convert PET Data into a Functional Matrix","title":"neuroSCC","text":"matrixCreator() transforms PET imaging data matrix format functional data analysis. row represents subject’s PET data, formatted align FDA methodologies.","code":"# NOTE: To keep example runtime short, only one synthetic PET file is used. # For full analysis, expand the filename pattern accordingly. # Step 1: Generate a database for a single subject controlPattern <- \"^syntheticControl1\\\\.nii\\\\.gz$\" databaseControls <- databaseCreator(pattern = controlPattern, control = TRUE, quiet = TRUE) # Step 2: Convert the database into a matrix format matrixControls <- matrixCreator(databaseControls, paramZ = 35, quiet = TRUE) # Display dimensions of the matrix dim(matrixControls)"},{"path":"https://iguanamarina.github.io/neuroSCC/index.html","id":"id_-meannormalization-normalize-data","dir":"","previous_headings":"","what":"📉 meanNormalization(): Normalize Data","title":"neuroSCC","text":"meanNormalization() performs row-wise mean normalization, adjusting intensity values across subjects. removes global intensity differences, making datasets comparable Functional Data Analysis (FDA).","code":"# Generate a minimal database and create a matrix (1 control subject) dataDir <- system.file(\"extdata\", package = \"neuroSCC\") controlPattern <- \"^syntheticControl1\\\\.nii\\\\.gz$\" databaseControls <- databaseCreator(pattern = controlPattern,                                     control = TRUE,                                     quiet = TRUE) matrixControls <- matrixCreator(databaseControls, paramZ = 35, quiet = TRUE) # Normalize the matrix (with diagnostics) normalizationResult <- meanNormalization(matrixControls,                                          returnDetails = TRUE,                                          quiet = FALSE)"},{"path":"https://iguanamarina.github.io/neuroSCC/index.html","id":"id_-neurocontour-extract-contours","dir":"","previous_headings":"","what":"📈 neuroContour(): Extract Contours","title":"neuroSCC","text":"neuroContour() extracts region boundaries (contours) neuroimaging data. particularly useful defining masks Regions Interest (ROIs) SCC computation.","code":"# Get the file path for a sample NIfTI file niftiFile <- system.file(\"extdata\", \"syntheticControl1.nii.gz\", package = \"neuroSCC\")  # Extract contours at level 0 contours <- neuroContour(niftiFile, paramZ = 35, levels = 0, plotResult = TRUE)  # Display the extracted contour coordinates if (length(contours) > 0) {   head(contours[[1]])  # Show first few points of the main contour }"},{"path":"https://iguanamarina.github.io/neuroSCC/index.html","id":"id_-getpoints-identify-significant-scc-differences","dir":"","previous_headings":"","what":"🔺 getPoints(): Identify Significant SCC Differences","title":"neuroSCC","text":"getPoints() identifies regions significant differences SCC computation. ImageSCC::scc.image() computes SCCs, getPoints() extracts coordinates group differences exceed confidence boundaries.","code":"# Load precomputed SCC example data(\"SCCcomp\", package = \"neuroSCC\")  # Extract significant SCC points significantPoints <- getPoints(SCCcomp)  # Show first extracted points (interpretation depends on SCC computation, see description) head(significantPoints$positivePoints)  # Regions where Pathological is hypoactive vs. Control head(significantPoints$negativePoints)  # Regions where Pathological is hyperactive vs. Control"},{"path":"https://iguanamarina.github.io/neuroSCC/index.html","id":"id_-getspmbinary-extract-spm-detected-significant-points","dir":"","previous_headings":"","what":"🧩 getSPMbinary(): Extract SPM-Detected Significant Points","title":"neuroSCC","text":"getSPMbinary() extracts significant points SPM-generated binary NIfTI file. returns voxel coordinates SPM detected significant differences, making comparable SCC results.","code":"# Load a sample binary NIfTI file (SPM result) niftiFile <- system.file(\"extdata\", \"binary.nii\", package = \"neuroSCC\") detectedSPM <- getSPMbinary(niftiFile, paramZ = 35)  # Show detected points head(detectedSPM)"},{"path":"https://iguanamarina.github.io/neuroSCC/index.html","id":"id_️-processrois-process-roi-data","dir":"","previous_headings":"","what":"🏷️ processROIs(): Process ROI Data","title":"neuroSCC","text":"processROIs() processes Regions Interest (ROIs) neuroimaging files. extracts voxel coordinates predefined hypoactive regions, structuring SCC analysis.","code":"# Load and process a sample ROI NIfTI file (console output) roiFile <- system.file(\"extdata\", \"ROIsample_Region2_18.nii.gz\", package = \"neuroSCC\") processedROI <- processROIs(roiFile, region = \"Region2\", number = \"18\", save = FALSE) head(processedROI)"},{"path":"https://iguanamarina.github.io/neuroSCC/index.html","id":"id_-generatepoissonclones-generate-synthetic-pet-data","dir":"","previous_headings":"","what":"👥 generatePoissonClones(): Generate Synthetic PET Data","title":"neuroSCC","text":"generatePoissonClones() creates synthetic clones PET neuroimaging data adding Poisson-distributed noise. function essential 1 vs. Group SCC analyses, single subject’s data needs expanded allow valid statistical inference.","code":"# Load example input matrix for Poisson cloning data(\"generatePoissonClonesExample\", package = \"neuroSCC\") # Select 10 random voxel positions for display set.seed(123) sampledCols <- sample(ncol(generatePoissonClonesExample), 10) # Generate 1 synthetic clone clones <- generatePoissonClones(generatePoissonClonesExample, numClones = 1, lambdaFactor = 0.25) # Show voxel intensity values after cloning clones[, sampledCols]"},{"path":"https://iguanamarina.github.io/neuroSCC/index.html","id":"id_-calculatemetrics-evaluate-scc-performance","dir":"","previous_headings":"","what":"📊 calculateMetrics(): Evaluate SCC Performance","title":"neuroSCC","text":"calculateMetrics() assesses accuracy SCC-detected significant points comparing known true ROI regions. computes Sensitivity, Specificity, PPV, NPV, allowing quantitative evaluation SCC performance.","code":"data(\"calculateMetricsExample\", package = \"neuroSCC\") # Evaluate SCC and SPM detection performance with(calculateMetricsExample, {   metricsSCC <- calculateMetrics(detectedSCC, trueROI, totalCoords, \"Region2_SCC\")   metricsSPM <- calculateMetrics(detectedSPM, trueROI, totalCoords, \"Region2_SPM\")   print(metricsSCC)   print(metricsSPM) })"},{"path":"https://iguanamarina.github.io/neuroSCC/index.html","id":"id_4️⃣-vignette-","dir":"","previous_headings":"","what":"4️⃣ Vignette","title":"neuroSCC","text":"full walkthrough using neuroSCC start finish available vignettes: 📌 Landing VignetteCovers data loading, matrix creation, triangulations. 📌 Two-group SCC Estimation & ComparisonComputes SCCs differences two groups identifies voxels outside estimated confidence intervals. 📌 1vsGroup SCC Estimation & ComparisonCompares individual patient control group using SCCs identifies voxels outside estimated confidence intervals.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/index.html","id":"id_5️⃣-visual-workflow-","dir":"","previous_headings":"","what":"5️⃣ Visual Workflow","title":"neuroSCC","text":"complete visual overview neuroSCC functions interact data, objects return, , can found Visual Workflow:","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/index.html","id":"id_6️⃣-references-","dir":"","previous_headings":"","what":"6️⃣ References","title":"neuroSCC","text":"Wang, Y., Wang, G., Wang, L., & Ogden, R.T. (2020). Simultaneous Confidence Corridors Mean Functions Functional Data Analysis Imaging Data. Biometrics, 76(2), 427-437. doi:10.1111/biom.13156 Arias-López, J. ., Cadarso-Suárez, C., & Aguiar-Fernández, P. (2021). Computational Issues Application Functional Data Analysis Imaging Data. International Conference Computational Science Applications (pp. 630–638). Springer International Publishing, Cham. doi:10.1007/978-3-030-86960-1_46 Arias-López, J. ., Cadarso-Suárez, C., & Aguiar-Fernández, P. (2022). Functional Data Analysis Imaging Mean Function Estimation: Computing Times Parameter Selection. Computers, 11(6), 91. MDPI. doi:10.3390/computers11060091 Ph.D. Thesis: Arias-López, J. . (development). Development Statistical Methods Neuroimage Data Analysis Towards Early Diagnosis Neurodegenerative Diseases. University Santiago de Compostela.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/index.html","id":"id_-contributing--feedback-","dir":"","previous_headings":"","what":"📢 Contributing & Feedback","title":"neuroSCC","text":"welcome contributions, feedback, issue reports community! like help improve neuroSCC, ’s can get involved:","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/index.html","id":"id_-found-a-bug-report-an-issue","dir":"","previous_headings":"","what":"🐛 Found a Bug? Report an Issue","title":"neuroSCC","text":"encounter bug, incorrect result, unexpected behavior, please: Check existing issues see already reported. clear description problem. Steps reproduce issue. error messages screenshots (applicable).","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/index.html","id":"id_-have-an-idea-suggest-a-feature","dir":"","previous_headings":"","what":"💡 Have an Idea? Suggest a Feature","title":"neuroSCC","text":"always looking improve neuroSCC. suggestion new feature enhancement, please: Browse open discussions see idea already suggested. detailed explanation idea. improve package. relevant references examples similar projects.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/index.html","id":"id_-want-to-contribute-code","dir":"","previous_headings":"","what":"🔧 Want to Contribute Code?","title":"neuroSCC","text":"love contributions! submit pull request (PR): Fork repository GitHub. Clone fork local machine: Create new branch feature fix: Make changes commit : Push changes fork: Submit pull request (PR) forked repository main neuroSCC repository. submitting, please: ✔ Ensure code follows package style guidelines. ✔ Add documentation new functions features. ✔ Run devtools::check() verify package tests pass.","code":"git clone https://github.com/YOUR_USERNAME/neuroSCC.git cd neuroSCC git checkout -b feature-new-functionality git add . git commit -m \"Added new functionality XYZ\" git push origin feature-new-functionality"},{"path":"https://iguanamarina.github.io/neuroSCC/index.html","id":"id_-contact--support","dir":"","previous_headings":"","what":"📧 Contact & Support","title":"neuroSCC","text":"questions related bugs feature requests, feel free : 📬 Email maintainer: juanantonio.arias.lopez@usc.es 💬 Join discussion GitHub Discussions","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Juan . Arias Lopez Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/calculateMetrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate SCC or SPM Detection Performance — calculateMetrics","title":"Evaluate SCC or SPM Detection Performance — calculateMetrics","text":"Computes Sensitivity, Specificity, Positive Predictive Value (PPV), Negative Predictive Value (NPV) comparing detected points ground truth ROI points. function used assess accuracy SCC- SPM-based detection neuroimaging analysis.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/calculateMetrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate SCC or SPM Detection Performance — calculateMetrics","text":"","code":"calculateMetrics(detectedPoints, truePoints, totalCoords, regionName)"},{"path":"https://iguanamarina.github.io/neuroSCC/reference/calculateMetrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate SCC or SPM Detection Performance — calculateMetrics","text":"detectedPoints data frame containing detected coordinates (x, y). SCC-detected points obtained using getPoints. SPM-detected points obtained using getSPMbinary. truePoints data frame ground truth ROI coordinates (x, y), extracted via processROIs. totalCoords list full voxel grid dimensions, created getDimensions. Must include named elements xDim yDim. regionName character string used label output region.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/calculateMetrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate SCC or SPM Detection Performance — calculateMetrics","text":"data frame following evaluation metrics region: Name analyzed region. sensitivity: True positive rate (TP / (TP + FN) * 100). specificity: True negative rate (TN / (TN + FP) * 100). PPV: Positive predictive value (TP / (TP + FP) * 100). NPV: Negative predictive value (TN / (TN + FN) * 100).","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/calculateMetrics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Evaluate SCC or SPM Detection Performance — calculateMetrics","text":"function requires three precomputed objects detectedPoints: SCC-detected points getPoints SPM-detected points getSPMbinary. truePoints: Ground truth ROIs extracted using processROIs. totalCoords: Full voxel coordinate grid getDimensions.","code":""},{"path":[]},{"path":"https://iguanamarina.github.io/neuroSCC/reference/calculateMetrics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate SCC or SPM Detection Performance — calculateMetrics","text":"","code":"# Load precomputed inputs for the example data(\"calculateMetricsExample\", package = \"neuroSCC\")  # Evaluate SCC and SPM detection performance with(calculateMetricsExample, {   metricsSCC <- calculateMetrics(detectedSCC, trueROI, totalCoords, \"Region2_SCC\")   metricsSPM <- calculateMetrics(detectedSPM, trueROI, totalCoords, \"Region2_SPM\")    print(metricsSCC)   print(metricsSPM) }) #>        region sensitivity specificity      PPV      NPV #> 1 Region2_SCC    85.12872    95.62596 97.22839 78.10603 #>        region sensitivity specificity      PPV      NPV #> 1 Region2_SPM    75.14124    96.31291 96.33654 75.01638"},{"path":"https://iguanamarina.github.io/neuroSCC/reference/calculateMetricsExample.html","id":null,"dir":"Reference","previous_headings":"","what":"Precomputed Inputs for SCC vs. SPM Performance Evaluation — calculateMetricsExample","title":"Precomputed Inputs for SCC vs. SPM Performance Evaluation — calculateMetricsExample","text":"dataset containing necessary inputs demonstrating calculateMetrics. enables reproducible fast example code compares SCC-detected SPM-detected points known ground truth ROI. inputs generated using sample PET ROI files included neuroSCC package.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/calculateMetricsExample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Precomputed Inputs for SCC vs. SPM Performance Evaluation — calculateMetricsExample","text":"","code":"data(\"calculateMetricsExample\")"},{"path":"https://iguanamarina.github.io/neuroSCC/reference/calculateMetricsExample.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Precomputed Inputs for SCC vs. SPM Performance Evaluation — calculateMetricsExample","text":"set four objects: detectedSCC Data frame SCC-detected coordinates (getPoints). detectedSPM Data frame SPM-detected coordinates (getSPMbinary). trueROI Ground truth ROI voxel data (processROIs). totalCoords List full image grid dimensions (getDimensions).","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/calculateMetricsExample.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Precomputed Inputs for SCC vs. SPM Performance Evaluation — calculateMetricsExample","text":"Simulated PET neuroimaging study testing SCC SPM detection accuracy.","code":""},{"path":[]},{"path":"https://iguanamarina.github.io/neuroSCC/reference/databaseCreator.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Database of Processed PET Image Data — databaseCreator","title":"Create a Database of Processed PET Image Data — databaseCreator","text":"Processes multiple PET image files matching specified filename pattern. file processed using neuroCleaner, results aggregated unified data frame functional data analysis. function serves key step neuroSCC workflow, bridging raw image data Simultaneous Confidence Corridors (SCC) computation.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/databaseCreator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Database of Processed PET Image Data — databaseCreator","text":"","code":"databaseCreator(   pattern,   control = TRUE,   useSequentialNumbering = FALSE,   demo = NULL,   quiet = FALSE )"},{"path":"https://iguanamarina.github.io/neuroSCC/reference/databaseCreator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Database of Processed PET Image Data — databaseCreator","text":"pattern character. regular expression defining file pattern match. Subject identifiers extracted filenames based pattern. control logical. TRUE, files treated control group data; FALSE, pathological group data. Default TRUE. useSequentialNumbering logical. TRUE, assigns sequential subject numbers instead extracting filenames. Default FALSE. demo data.frame, optional. provided, demographic information included file. Default NULL. quiet logical. TRUE, suppresses progress messages. Default FALSE.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/databaseCreator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Database of Processed PET Image Data — databaseCreator","text":"data.frame combining processed voxel-level data matched files. row represents voxel (3D pixel). column structure depends input control group: CN_number, z, x, y, pet pathological group: AD_number, z, x, y, pet demographics included: additional columns PPT, Group, Sex, Age","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/databaseCreator.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a Database of Processed PET Image Data — databaseCreator","text":"function performs following steps Identifies image files matching given pattern. Processes file using neuroCleaner, optionally merging demographic data. Adds subject identifier column (CN_number AD_number). Aggregates results single data frame. files successfully processed, empty data frame returned warning. function typically followed matrixCreator, converts output matrix format functional analysis.","code":""},{"path":[]},{"path":"https://iguanamarina.github.io/neuroSCC/reference/databaseCreator.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Database of Processed PET Image Data — databaseCreator","text":"","code":"# NOTE: To keep runtime below CRAN limits, this example processes only 1 subject. # You can expand the pattern to include all subjects for real use.  # Example: Create a database from a single synthetic PET image (control group) controlPattern <- \"^syntheticControl1\\\\.nii\\\\.gz$\" databaseControls <- databaseCreator(pattern = controlPattern, control = TRUE, quiet = TRUE) head(databaseControls) #>   CN_number z x y pet #> 1         1 1 1 1   0 #> 2         1 1 1 2   0 #> 3         1 1 1 3   0 #> 4         1 1 1 4   0 #> 5         1 1 1 5   0 #> 6         1 1 1 6   0"},{"path":"https://iguanamarina.github.io/neuroSCC/reference/generatePoissonClones.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Synthetic Poisson Clones for PET Data — generatePoissonClones","title":"Generate Synthetic Poisson Clones for PET Data — generatePoissonClones","text":"Generates synthetic clones PET data matrix adding Poisson-distributed noise non-zero voxel. approach helps address limitations functional data analysis (FDA) single-subject versus group (1 vs. Group) setups, single subject lacks sufficient variability reliably estimate Simultaneous Confidence Corridors (SCCs).","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/generatePoissonClones.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Synthetic Poisson Clones for PET Data — generatePoissonClones","text":"","code":"generatePoissonClones(originalMatrix, numClones, lambdaFactor)"},{"path":"https://iguanamarina.github.io/neuroSCC/reference/generatePoissonClones.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Synthetic Poisson Clones for PET Data — generatePoissonClones","text":"originalMatrix numeric matrix row represents flattened PET image. numClones integer specifying number synthetic clones generate. lambdaFactor positive numeric value scales magnitude Poisson noise.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/generatePoissonClones.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Synthetic Poisson Clones for PET Data — generatePoissonClones","text":"numeric matrix numClones rows, representing noisy version         originalMatrix Poisson noise added.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/generatePoissonClones.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Synthetic Poisson Clones for PET Data — generatePoissonClones","text":"Values equal 0 remain unchanged preserve background regions. NA values replaced 0 adding noise. Poisson noise applied positive values, scaled lambdaFactor. Enables valid SCC estimation single-subject settings artificially increasing sample size.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/generatePoissonClones.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Synthetic Poisson Clones for PET Data — generatePoissonClones","text":"","code":"# Load example input matrix for Poisson cloning data(\"generatePoissonClonesExample\", package = \"neuroSCC\") # Select 10 random voxel positions for display set.seed(123) sampledCols <- sample(ncol(generatePoissonClonesExample), 10) # Generate 1 synthetic clone clones <- generatePoissonClones(generatePoissonClonesExample, numClones = 1, lambdaFactor = 0.25) # Show voxel intensity values after cloning clones[, sampledCols] #>  [1] 12  0  0  5  0  0  0  7 10  0"},{"path":"https://iguanamarina.github.io/neuroSCC/reference/generatePoissonClonesExample.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Input for Poisson Clone Generation — generatePoissonClonesExample","title":"Example Input for Poisson Clone Generation — generatePoissonClonesExample","text":"full single-subject PET matrix used demonstrate generatePoissonClones. matrix extracted simulated neuroimaging data included neuroSCC package. example avoids long runtime generating one synthetic clone.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/generatePoissonClonesExample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Input for Poisson Clone Generation — generatePoissonClonesExample","text":"","code":"data(\"generatePoissonClonesExample\")"},{"path":"https://iguanamarina.github.io/neuroSCC/reference/generatePoissonClonesExample.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Input for Poisson Clone Generation — generatePoissonClonesExample","text":"numeric matrix named generatePoissonClonesExample, 1 row voxel columns.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/generatePoissonClonesExample.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example Input for Poisson Clone Generation — generatePoissonClonesExample","text":"Simulated PET neuroimaging dataset included neuroSCC.","code":""},{"path":[]},{"path":"https://iguanamarina.github.io/neuroSCC/reference/getDimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Dimensions from a Neuroimaging File — getDimensions","title":"Get Dimensions from a Neuroimaging File — getDimensions","text":"Extracts voxel dimension information NIfTI similar neuroimaging file. function designed work neuroCleaner, can also used independently inspect image dimensions.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/getDimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Dimensions from a Neuroimaging File — getDimensions","text":"","code":"getDimensions(file)"},{"path":"https://iguanamarina.github.io/neuroSCC/reference/getDimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Dimensions from a Neuroimaging File — getDimensions","text":"file NIfTI file object file path pointing NIfTI image.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/getDimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Dimensions from a Neuroimaging File — getDimensions","text":"named list following elements xDim – Number voxels along X axis. yDim – Number voxels along Y axis. zDim – Number slices along Z axis. dim – Total number voxels 2D slice (calculated xDim * yDim).","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/getDimensions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Dimensions from a Neuroimaging File — getDimensions","text":"function accepts either file path preloaded nifti object. file path provided, uses oro.nifti::readNIfTI() load image. function ensures consistent dimension extraction across neuroSCC pipeline.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/getDimensions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Dimensions from a Neuroimaging File — getDimensions","text":"","code":"# Get the file path for a sample NIfTI file niftiFile <- system.file(\"extdata\", \"syntheticControl1.nii.gz\", package = \"neuroSCC\")  # Extract dimensions from the NIfTI file dimensions <- getDimensions(niftiFile)  # Display the extracted dimensions print(dimensions) #> $xDim #> [1] 91 #>  #> $yDim #> [1] 109 #>  #> $zDim #> [1] 91 #>  #> $dim #> [1] 9919 #>"},{"path":"https://iguanamarina.github.io/neuroSCC/reference/getPoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Significant SCC Points from an SCC Comparison Object — getPoints","title":"Extract Significant SCC Points from an SCC Comparison Object — getPoints","text":"Identifies extracts coordinates differences fall outside simultaneous confidence corridors (SCCs), indicating statistically significant regions. function processes results ImageSCC::scc.image() returns voxel locations represent either hypo- hyperactivity. Interpretation depends order inputs SCC computation. SCC computed scc.image(Ya = Y_AD, Yb = Y_CN, ...) (.e., Control group second argument). positivePoints — Regions Control minus Pathological significantly SCC.     correspond areas Pathological group (AD) hypoactive relative Controls. negativePoints — Regions Control minus Pathological significantly SCC.     correspond areas Pathological group hyperactive relative Controls. Always confirm order Ya Yb SCC computation interpret directionality correctly.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/getPoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Significant SCC Points from an SCC Comparison Object — getPoints","text":"","code":"getPoints(sccResult)"},{"path":"https://iguanamarina.github.io/neuroSCC/reference/getPoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Significant SCC Points from an SCC Comparison Object — getPoints","text":"sccResult list SCC computation results, returned ImageSCC::scc.image. Must include following components Z.band — matrix specifying grid positions. ind.inside.cover — Indices grid points within confidence band. scc — 3D array containing computed SCC values.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/getPoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Significant SCC Points from an SCC Comparison Object — getPoints","text":"named list two elements positivePoints — data frame coordinates first group (Ya) shows         significantly lower activity second group (Yb). negativePoints — data frame coordinates first group (Ya) shows         significantly higher activity second group (Yb).","code":""},{"path":[]},{"path":"https://iguanamarina.github.io/neuroSCC/reference/getPoints.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Significant SCC Points from an SCC Comparison Object — getPoints","text":"","code":"# Load precomputed SCC example data(\"SCCcomp\", package = \"neuroSCC\")  # Extract significant SCC points significantPoints <- getPoints(SCCcomp)  # Show extracted points (interpretation depends on SCC setup; see description) head(significantPoints$positivePoints)  # Pathological hypoactive vs. Control #>    x  y #> 1 11 52 #> 2 11 53 #> 3 11 54 #> 4 11 55 #> 5 11 56 #> 6 12 50 head(significantPoints$negativePoints)  # Pathological hyperactive vs. Control #>    x  y #> 1  9 44 #> 2  9 45 #> 3  9 46 #> 4  9 47 #> 5 10 38 #> 6 10 39"},{"path":"https://iguanamarina.github.io/neuroSCC/reference/getSPMbinary.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract SPM-Detected Significant Points from a Binary NIfTI File — getSPMbinary","title":"Extract SPM-Detected Significant Points from a Binary NIfTI File — getSPMbinary","text":"Extracts voxel coordinates pet = 1 (.e., statistically significant points) binary NIfTI file produced external SPM analysis. voxels specific brain slice (z = paramZ) retained. output data frame structured identically getPoints, allowing direct comparison SCC- SPM-detected regions via calculateMetrics.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/getSPMbinary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract SPM-Detected Significant Points from a Binary NIfTI File — getSPMbinary","text":"","code":"getSPMbinary(niftiFile, paramZ = 35)"},{"path":"https://iguanamarina.github.io/neuroSCC/reference/getSPMbinary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract SPM-Detected Significant Points from a Binary NIfTI File — getSPMbinary","text":"niftiFile character. path binary NIfTI file generated SPM. paramZ integer. specific z-slice extract. Default 35.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/getSPMbinary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract SPM-Detected Significant Points from a Binary NIfTI File — getSPMbinary","text":"data frame following columns: x, y – Coordinates significant voxels specified slice.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/getSPMbinary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract SPM-Detected Significant Points from a Binary NIfTI File — getSPMbinary","text":"function converts externally generated SPM results format compatible SCC analysis tools neuroSCC. Use getDimensions inspect full coordinate space needed.","code":""},{"path":[]},{"path":"https://iguanamarina.github.io/neuroSCC/reference/getSPMbinary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract SPM-Detected Significant Points from a Binary NIfTI File — getSPMbinary","text":"","code":"# Load a sample binary NIfTI file (SPM result) niftiFile <- system.file(\"extdata\", \"binary.nii.gz\", package = \"neuroSCC\") detectedSPM <- getSPMbinary(niftiFile, paramZ = 35)  # Show detected points head(detectedSPM) #>         x  y #> 338496 12 51 #> 338497 12 52 #> 338498 12 53 #> 338499 12 54 #> 338500 12 55 #> 338501 12 56"},{"path":"https://iguanamarina.github.io/neuroSCC/reference/matrixCreator.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Database to Functional Data Matrix Format — matrixCreator","title":"Convert Database to Functional Data Matrix Format — matrixCreator","text":"Converts PET image database (created via databaseCreator) matrix format suitable functional data analysis. row resulting matrix corresponds subject, column voxel's PET intensity values specified brain slice.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/matrixCreator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Database to Functional Data Matrix Format — matrixCreator","text":"","code":"matrixCreator(   database,   paramZ = 35,   useSequentialNumbering = FALSE,   quiet = FALSE )"},{"path":"https://iguanamarina.github.io/neuroSCC/reference/matrixCreator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Database to Functional Data Matrix Format — matrixCreator","text":"database data frame created databaseCreator, containing voxel-level PET image data, including subject identifiers, coordinates, intensity values. paramZ integer specifying z-coordinate (slice) extract. Default 35. useSequentialNumbering logical. TRUE, assigns sequential subject IDs instead extracting filenames. currently used inside function. Default FALSE. quiet logical. TRUE, suppresses progress messages. Default FALSE.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/matrixCreator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Database to Functional Data Matrix Format — matrixCreator","text":"numeric matrix row represents one subject's PET values selected z-slice. column corresponds voxel (flattened 1D row).","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/matrixCreator.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert Database to Functional Data Matrix Format — matrixCreator","text":"function performs following steps Verifies specified z-slice exists database. Identifies correct subject grouping column (CN_number AD_number). Determines matrix dimensions using x y coordinates. Extracts PET intensities per subject given slice. Replaces NaN values 0 ensure numerical stability. function typically follows databaseCreator precedes meanNormalization neuroSCC workflow.","code":""},{"path":[]},{"path":"https://iguanamarina.github.io/neuroSCC/reference/matrixCreator.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Database to Functional Data Matrix Format — matrixCreator","text":"","code":"# NOTE: To keep example runtime short, only one synthetic PET file is used. # For full analysis, expand the filename pattern accordingly.  # Step 1: Generate a database for a single subject controlPattern <- \"^syntheticControl1\\\\.nii\\\\.gz$\" databaseControls <- databaseCreator(pattern = controlPattern, control = TRUE, quiet = TRUE)  # Step 2: Convert the database into a matrix format matrixControls <- matrixCreator(databaseControls, paramZ = 35, quiet = TRUE)  # Display dimensions of the matrix dim(matrixControls) #> [1]    1 9919"},{"path":"https://iguanamarina.github.io/neuroSCC/reference/meanNormalization.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean Normalization for Matrix Data — meanNormalization","title":"Mean Normalization for Matrix Data — meanNormalization","text":"Normalizes row matrix dividing elements row mean, ignoring NA values. step commonly used adjust global intensity differences across subjects applying statistical comparisons functional data analysis.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/meanNormalization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean Normalization for Matrix Data — meanNormalization","text":"","code":"meanNormalization(   matrixData,   handleInvalidRows = c(\"warn\", \"error\", \"omit\"),   returnDetails = FALSE,   quiet = FALSE )"},{"path":"https://iguanamarina.github.io/neuroSCC/reference/meanNormalization.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mean Normalization for Matrix Data — meanNormalization","text":"matrixData matrix row represents one subject’s PET data, typically generated matrixCreator. handleInvalidRows character. Specifies handle rows invalid means (either zero NA). Options include \"warn\" (default), \"error\", \"omit\". returnDetails logical. TRUE, returns list normalized matrix additional diagnostics. FALSE (default), returns normalized matrix. quiet logical. TRUE, suppresses console messages. Default FALSE.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/meanNormalization.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mean Normalization for Matrix Data — meanNormalization","text":"normalized matrix, list returnDetails = TRUE. normalizedMatrix – normalized matrix. problemRows – Indices rows zero NA means.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/meanNormalization.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mean Normalization for Matrix Data — meanNormalization","text":"function performs following steps Computes row means input matrix, ignoring NAs. Divides row corresponding mean. Replaces NaN values (division 0) 0 applicable. Handles problematic rows according selected handleInvalidRows option:         \"warn\" (default) issues warning, \"error\" stops execution,         \"omit\" removes affected rows result. step often used prior applying SCC methods ensure comparability across subjects.","code":""},{"path":[]},{"path":"https://iguanamarina.github.io/neuroSCC/reference/meanNormalization.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mean Normalization for Matrix Data — meanNormalization","text":"","code":"# Generate a minimal database and create a matrix (1 control subject) dataDir <- system.file(\"extdata\", package = \"neuroSCC\") controlPattern <- \"^syntheticControl1\\\\.nii\\\\.gz$\" databaseControls <- databaseCreator(pattern = controlPattern,                                     control = TRUE,                                     quiet = TRUE) matrixControls <- matrixCreator(databaseControls, paramZ = 35, quiet = TRUE)  # Normalize the matrix (with diagnostics) normalizationResult <- meanNormalization(matrixControls,                                          returnDetails = TRUE,                                          quiet = FALSE) #>  #>  Mean before normalization: 4.349632 #>  #>  Normalization completed."},{"path":"https://iguanamarina.github.io/neuroSCC/reference/neuroCleaner.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean and Load Data from NIfTI Neuroimaging Files — neuroCleaner","title":"Clean and Load Data from NIfTI Neuroimaging Files — neuroCleaner","text":"Loads NIfTI-format neuroimaging file transforms structured data frame, organizing voxel-level information downstream analysis. function first step neuroimaging processing pipeline neuroSCC, converting raw PET data format suitable functional data analysis. SCCs later computed using functions ImageSCC package, ImageSCC::scc.image().","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/neuroCleaner.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean and Load Data from NIfTI Neuroimaging Files — neuroCleaner","text":"","code":"neuroCleaner(name, demo = NULL, demoRow = 1)"},{"path":"https://iguanamarina.github.io/neuroSCC/reference/neuroCleaner.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean and Load Data from NIfTI Neuroimaging Files — neuroCleaner","text":"name character. full path NIfTI file process. demo Optional data.frame containing demographic information. provided, include columns (case-insensitive): PPT, Group, Sex, Age. automatic matching via PPT column fails, row specified demoRow used. Default NULL. demoRow integer. Row use demographic table automatic matching fails. Default 1.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/neuroCleaner.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean and Load Data from NIfTI Neuroimaging Files — neuroCleaner","text":"data frame row represents voxel (3D pixel). demographics provided: columns include PPT, Group, Sex, Age, z, x, y, pet. demographics provided: columns include z, x, y, pet. pet column contains PET intensity value voxel location.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/neuroCleaner.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Clean and Load Data from NIfTI Neuroimaging Files — neuroCleaner","text":"function performs following steps Loads NIfTI file using oro.nifti::readNIfTI(). Converts 3D image tidy data frame. Adds z, x, y voxel coordinates. demographic data provided, attempts match based PPT (case-insensitive). match found, demoRow used. resulting data frame serves input databaseCreator, matrixCreator, core functions neuroSCC pipeline.","code":""},{"path":[]},{"path":"https://iguanamarina.github.io/neuroSCC/reference/neuroCleaner.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean and Load Data from NIfTI Neuroimaging Files — neuroCleaner","text":"","code":"# Load a sample Control NIfTI file niftiFile <- system.file(\"extdata\", \"syntheticControl1.nii.gz\", package = \"neuroSCC\")  # Example Without demographic data petData <- neuroCleaner(niftiFile) petData[sample(nrow(petData), 10), ]  # Show 10 random voxels #>         z  x   y pet #> 727430 74 31  73   0 #> 782978 79 86  31   0 #> 682067 69 70  54   6 #> 860620 87 70  65   0 #> 667570 68 28  54  10 #> 118523 12 87  40   0 #> 391197 40 40 105   0 #> 29528   3 89  98   0 #> 297705 31  2  26   0 #> 142307 15 32  62   5"},{"path":"https://iguanamarina.github.io/neuroSCC/reference/neuroContour.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain and save neuroimaging contours from a NIFTI file — neuroContour","title":"Obtain and save neuroimaging contours from a NIFTI file — neuroContour","text":"function extracts contours neuroimaging NIFTI file values change according specified levels. processes NIFTI file neuroCleaner extract structured neuroimaging data, extracts contours using contoureR::getContourLines. contours serve input Triangulation::TriMesh, used Simultaneous Confidence Corridors (SCCs) calculations. mandatory, highly recommended input NIFTI file pre-processed zero values represent background non-zero values represent regions interest. function's default behavior extracts contours level 0, ideal well-masked data.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/neuroContour.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain and save neuroimaging contours from a NIFTI file — neuroContour","text":"","code":"neuroContour(niftiFile, paramZ = 35, levels = c(0), plotResult = FALSE)"},{"path":"https://iguanamarina.github.io/neuroSCC/reference/neuroContour.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain and save neuroimaging contours from a NIFTI file — neuroContour","text":"niftiFile character, path NIFTI file containing neuroimaging data. Ideally, file masked zero values represent background. paramZ integer, specific z-slice extract contours . Default 35. levels numeric, vector levels draw contours. Default c(0). plotResult logical, TRUE, plots extracted contours. Default FALSE.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/neuroContour.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain and save neuroimaging contours from a NIFTI file — neuroContour","text":"list data frames, data frame contains x y coordinates contour. first element typically represents external boundary, subsequent elements (present) represent internal contours holes. data frame two columns: x – x-coordinates contour points. y – y-coordinates contour points.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/neuroContour.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Obtain and save neuroimaging contours from a NIFTI file — neuroContour","text":"function extracts contours NIFTI file, typically masked image background values set zero, regions interest contain non-zero values. users can specify different boundary level, recommended approach use levels = 0 masked data. extracted contours typically used input Triangulation::TriMesh create triangular mesh region, used Simultaneous Confidence Corridors calculations.","code":""},{"path":[]},{"path":"https://iguanamarina.github.io/neuroSCC/reference/neuroContour.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain and save neuroimaging contours from a NIFTI file — neuroContour","text":"","code":"# Get the file path for a sample NIfTI file niftiFile <- system.file(\"extdata\", \"syntheticControl1.nii.gz\", package = \"neuroSCC\")  # Extract contours at level 0 contours <- neuroContour(niftiFile, paramZ = 35, levels = 0, plotResult = TRUE)   # Display the first few points of the main contour head(contours[[1]]) #>   x  y #> 1 8 44 #> 2 9 43 #> 3 9 43 #> 4 9 42 #> 5 9 42 #> 6 9 41"},{"path":"https://iguanamarina.github.io/neuroSCC/reference/neuroSCC-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrappers for Neuroimaging Functional Data Preparation and SCC Analysis — neuroSCC-package","title":"Wrappers for Neuroimaging Functional Data Preparation and SCC Analysis — neuroSCC-package","text":"neuroSCC package provides tools preprocess structure neuroimaging data functional data analysis using Simultaneous Confidence Corridors (SCCs). wraps external packages prepare data PET images, extract contours, generate meshes, evaluate regions statistical significance. methods implemented support group comparisons single-subject vs. group inference, following methodology described Wang et al. (2020) author's PhD thesis.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/neuroSCC-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Wrappers for Neuroimaging Functional Data Preparation and SCC Analysis — neuroSCC-package","text":"package serves bridge neuroimaging file formats (e.g., NIfTI) advanced statistical tools like ImageSCC::scc.image. includes following key components. Loading cleaning PET image data. Extracting ROIs constructing functional data matrices. Generating synthetic Poisson clones 1-vs-group settings. Extracting SCC-detected points evaluating detection metrics.","code":""},{"path":[]},{"path":"https://iguanamarina.github.io/neuroSCC/reference/neuroSCC-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Wrappers for Neuroimaging Functional Data Preparation and SCC Analysis — neuroSCC-package","text":"Maintainer: Juan . Arias Lopez juanantonio.arias.lopez@usc.es (ORCID) [copyright holder] contributors: Virgilio Gomez Rubio Virgilio.Gomez@uclm.es (ORCID) [reviewer] Pablo Aguiar Fernandez pablo.aguiar@usc.es (ORCID) [thesis advisor] Andrew Haddon Kemp .H.Kemp@swansea.ac.uk (ORCID) [thesis advisor]","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/processROIs.html","id":null,"dir":"Reference","previous_headings":"","what":"Process ROI Voxel Data from a NIfTI File — processROIs","title":"Process ROI Voxel Data from a NIfTI File — processROIs","text":"Processes Regions Interest (ROIs) binary NIfTI file extracting voxel-level coordinates labeling voxel part ROI . function preserves spatial structure typically used prepare ground truth ROIs comparison SCC-detected regions via calculateMetrics.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/processROIs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process ROI Voxel Data from a NIfTI File — processROIs","text":"","code":"processROIs(   roiFile,   region,   number,   save = TRUE,   outputDir = tempdir(),   verbose = TRUE )"},{"path":"https://iguanamarina.github.io/neuroSCC/reference/processROIs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process ROI Voxel Data from a NIfTI File — processROIs","text":"roiFile character. Path binary NIfTI file containing ROI data. region character. Name ROI region (e.g., \"Region2\"). number character. Identifier subject group (e.g., \"18\"). save logical. TRUE, saves result .RDS file. FALSE, returns data frame console. Default TRUE. outputDir character. Directory ROI table saved save = TRUE. Default temporary file: tempdir(). verbose logical. TRUE, displays progress messages. Default TRUE.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/processROIs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process ROI Voxel Data from a NIfTI File — processROIs","text":"data frame voxel-level ROI information. group – Combined identifier built region number. z, x, y – Voxel coordinates. pet – Binary value indicating ROI membership (1 = ROI, 0 = non-ROI). save = TRUE, data frame saved .RDS file returned console.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/processROIs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Process ROI Voxel Data from a NIfTI File — processROIs","text":"function uses neuroCleaner load flatten NIfTI file structured data frame. voxels retained, pet column indicating ones part ROI (1) versus background (0). ROI label added group column. output used ground truth evaluating detection performance SCC analyses.","code":""},{"path":[]},{"path":"https://iguanamarina.github.io/neuroSCC/reference/processROIs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process ROI Voxel Data from a NIfTI File — processROIs","text":"","code":"# Load and process a sample ROI NIfTI file (console output)"},{"path":"https://iguanamarina.github.io/neuroSCC/reference/SCCcomp.html","id":null,"dir":"Reference","previous_headings":"","what":"Example SCC Computation Result — SCCcomp","title":"Example SCC Computation Result — SCCcomp","text":"precomputed example Simultaneous Confidence Corridor (SCC) analysis comparing group pathological subjects controls. object generated using ImageSCC::scc.image function represents realistic output SCC-based neuroimaging group comparisons. dataset used examples getPoints calculateMetrics, allowing users explore SCC outputs without needing recompute .","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/SCCcomp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example SCC Computation Result — SCCcomp","text":"","code":"data(\"SCCcomp\")"},{"path":"https://iguanamarina.github.io/neuroSCC/reference/SCCcomp.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example SCC Computation Result — SCCcomp","text":"named list class \"image\" following elements scc 3D array SCC confidence bands, dimensions [n, 2, alpha]. Z.band Matrix grid coordinates corresponding evaluated locations. ind.inside.cover Integer vector indices grid points inside SCC band. V.est., V.est.b Vertex matrices triangulated domains (pathological control groups). Tr.est., Tr.est.b Triangle index matrices corresponding domain meshes. alpha Vector confidence levels used (e.g., 0.1, 0.05, 0.01). d.est Spline degree used mean function estimation. r Smoothing parameter used fitting.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/reference/SCCcomp.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example SCC Computation Result — SCCcomp","text":"Simulated PET neuroimaging study evaluating SCC methodology.","code":""},{"path":[]},{"path":"https://iguanamarina.github.io/neuroSCC/news/index.html","id":"neuroscc-100","dir":"Changelog","previous_headings":"","what":"neuroSCC 1.0.0","title":"neuroSCC 1.0.0","text":"First CRAN Release. Additional_repositories included using drat Reduced computation times time-consuming examples","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/news/index.html","id":"neuroscc-0170-25-03-25","dir":"Changelog","previous_headings":"","what":"neuroSCC 0.17.0 (25-03-25)","title":"neuroSCC 0.17.0 (25-03-25)","text":"Everything working. Check Check ––CRAN also working errors notes.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/news/index.html","id":"neuroscc-0160-24-03-25","dir":"Changelog","previous_headings":"","what":"neuroSCC 0.16.0 (24-03-25)","title":"neuroSCC 0.16.0 (24-03-25)","text":"Webpage Vignettes already working.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/news/index.html","id":"neuroscc-0150-21-03-25","dir":"Changelog","previous_headings":"","what":"neuroSCC 0.15.0 (21-03-25)","title":"neuroSCC 0.15.0 (21-03-25)","text":"First final version webpage deployed","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/news/index.html","id":"neuroscc-0140","dir":"Changelog","previous_headings":"","what":"neuroSCC 0.14.0","title":"neuroSCC 0.14.0","text":"generatePoissonClones() already working. calculateMetrics() already working. getSPMbinary() included SPM processing.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/news/index.html","id":"neuroscc-0130","dir":"Changelog","previous_headings":"","what":"neuroSCC 0.13.0","title":"neuroSCC 0.13.0","text":"First Complete Release basic functioning achieved.","code":""},{"path":[]},{"path":"https://iguanamarina.github.io/neuroSCC/news/index.html","id":"major-changes-0-12-0","dir":"Changelog","previous_headings":"","what":"Major Changes","title":"neuroSCC 0.12.0","text":"Included plotSCC() visualization. Included generatePoissonClones() 1vsGroup setups. Included calculateMetrics() performante estimation.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/news/index.html","id":"major-changes-0-12-0-1","dir":"Changelog","previous_headings":"","what":"Major Changes","title":"neuroSCC 0.12.0","text":"Introduced processROIs() function efficient Region Interest (ROI) processing. Updated getPoints() improve extraction significant points Simultaneous Confidence Corridors (SCCs). Comprehensive documentation added functions, aligning CRAN standards facilitate user understanding package integration.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/news/index.html","id":"minor-improvements-0-12-0","dir":"Changelog","previous_headings":"","what":"Minor Improvements","title":"neuroSCC 0.12.0","text":"Implemented robust error handling across multiple functions enhance package stability user experience.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/news/index.html","id":"neuroscc-010-0","dir":"Changelog","previous_headings":"","what":"neuroSCC 0.10-0","title":"neuroSCC 0.10-0","text":"Added databaseCreator(), enabling creation structured databases neuroimaging data.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/news/index.html","id":"neuroscc-09-0","dir":"Changelog","previous_headings":"","what":"neuroSCC 0.9-0","title":"neuroSCC 0.9-0","text":"Introduced matrixCreator(), facilitating conversion databases matrix formats suitable analysis.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/news/index.html","id":"neuroscc-08-0","dir":"Changelog","previous_headings":"","what":"neuroSCC 0.8-0","title":"neuroSCC 0.8-0","text":"Implemented meanNormalization(), allowing normalization data matrices mean values.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/news/index.html","id":"neuroscc-07-0","dir":"Changelog","previous_headings":"","what":"neuroSCC 0.7-0","title":"neuroSCC 0.7-0","text":"Integrated additional raw functions extracted directly MASTERSCRIPTS expand package capabilities.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/news/index.html","id":"neuroscc-06-0","dir":"Changelog","previous_headings":"","what":"neuroSCC 0.6-0","title":"neuroSCC 0.6-0","text":"Continued incorporation functions MASTERSCRIPTS, enhancing data processing workflows.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/news/index.html","id":"neuroscc-05-0","dir":"Changelog","previous_headings":"","what":"neuroSCC 0.5-0","title":"neuroSCC 0.5-0","text":"Included initial versions new functions broaden package’s analytical tools.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/news/index.html","id":"neuroscc-04-0","dir":"Changelog","previous_headings":"","what":"neuroSCC 0.4-0","title":"neuroSCC 0.4-0","text":"Applied minor tweaks adjustments existing functions improve performance reliability.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/news/index.html","id":"neuroscc-03-0","dir":"Changelog","previous_headings":"","what":"neuroSCC 0.3-0","title":"neuroSCC 0.3-0","text":"Conducted multiple tests validate function performance. Updated neuroCleaner() enhanced data cleaning processes.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/news/index.html","id":"neuroscc-02-0","dir":"Changelog","previous_headings":"","what":"neuroSCC 0.2-0","title":"neuroSCC 0.2-0","text":"Added README provide overview usage instructions. Introduced initial version neuroCleaner() preprocessing neuroimaging data. Attempted include sample data; however, due issues, subsequently removed.","code":""},{"path":"https://iguanamarina.github.io/neuroSCC/news/index.html","id":"neuroscc-01-0","dir":"Changelog","previous_headings":"","what":"neuroSCC 0.1-0","title":"neuroSCC 0.1-0","text":"Established foundational structure package, setting groundwork subsequent development.","code":""}]
